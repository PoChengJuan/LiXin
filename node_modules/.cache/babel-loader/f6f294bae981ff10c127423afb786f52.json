{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/React/LiXin/src/FrontEnd/Components/Product.js\";\nimport React from 'react';\nimport { Breadcrumb, Icon } from 'antd';\nimport { BrowserRouter as Router, Route, Link, Redirect } from \"react-router-dom\";\nimport ProductList from '../Components/ProductList.js';\nimport './Product.css';\nimport pic1 from '../pic/1.png';\nimport pic2 from '../pic/2.png';\nimport pic3 from '../pic/3.png';\nimport pic4 from '../pic/4.png';\nimport pic5 from '../pic/5.png';\nimport pic6 from '../pic/6.png';\nconst routes = [{\n  path: '/',\n  breadcrumbName: 'home',\n  main: () => React.createElement(ProductList, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  })\n}, {\n  path: 'product1',\n  breadcrumbName: 'product1'\n}, {\n  path: 'product2',\n  breadcrumbName: 'product2'\n}, {\n  path: 'product3',\n  breadcrumbName: 'product3'\n}, {\n  path: 'product4',\n  breadcrumbName: 'product4'\n}, {\n  path: 'product5',\n  breadcrumbName: 'product5'\n}, {\n  path: 'product6',\n  breadcrumbName: 'product6'\n}];\nconst _props = props,\n      location = _props.location;\nconst pathSnippets = location.pathname.split('/').filter(i => i);\nconst extraBreadcrumbItems = pathSnippets.map((_, index) => {\n  const url = \"/\".concat(pathSnippets.slice(0, index + 1).join('/'));\n  return React.createElement(Breadcrumb.Item, {\n    key: url,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: url,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, breadcrumbNameMap[url]));\n});\nconst breadcrumbItems = [React.createElement(Breadcrumb.Item, {\n  key: \"home\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 58\n  },\n  __self: this\n}, React.createElement(Link, {\n  to: \"/\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 59\n  },\n  __self: this\n}, \"Home\"))].concat(extraBreadcrumbItems);\n\nclass Product extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.updateDimensions = e => {\n      console.log(\"StockList updateDimensions\");\n      const _this$refDom = this.refDom,\n            clientWidth = _this$refDom.clientWidth,\n            clientHeight = _this$refDom.clientHeight;\n      console.log('====================================');\n      console.log(clientWidth, clientHeight, this.refDom);\n      console.log('====================================');\n      this.setState({\n        chartWidth: clientWidth\n      });\n    };\n\n    this.state = {\n      chartWidth: 0,\n      chartHeight: 250\n    };\n\n    this.saveRef = ref => {\n      this.refDom = ref;\n    };\n\n    this.updateDimensions = this.updateDimensions.bind(this);\n  }\n\n  render() {\n    return React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }), React.createElement(Breadcrumb, {\n      separator: \">\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(Breadcrumb.Item, {\n      href: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      type: \"usappstoreer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      style: {\n        fontSize: \"18px\",\n        color: '#C8A065'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"\\u7522\\u54C1\"))), React.createElement(Breadcrumb, {\n      separator: \">\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, breadcrumbItems), React.createElement(\"div\", {\n      className: \"Product\",\n      ref: this.saveRef,\n      style: {\n        flex: 1,\n        padding: \"10px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, routes.map((route, index) => // Render more <Route>s with the same paths as\n    // above, but different components this time.\n    React.createElement(Route, {\n      key: index,\n      path: route.path,\n      exact: route.exact,\n      component: route.main,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }))));\n  }\n\n  componentWillMount() {\n    console.log('componentWillMount');\n  }\n\n  componentWillUnmount() {\n    console.log('componentWillUnmount');\n    window.removeEventListener(\"resize\", this.updateDimensions);\n  }\n\n  componentWillUpdate() {\n    console.log('componentWillUpdate');\n  }\n\n}\n\nexport default Product;","map":{"version":3,"sources":["/Users/mac/Documents/React/LiXin/src/FrontEnd/Components/Product.js"],"names":["React","Breadcrumb","Icon","BrowserRouter","Router","Route","Link","Redirect","ProductList","pic1","pic2","pic3","pic4","pic5","pic6","routes","path","breadcrumbName","main","props","location","pathSnippets","pathname","split","filter","i","extraBreadcrumbItems","map","_","index","url","slice","join","breadcrumbNameMap","breadcrumbItems","concat","Product","Component","constructor","updateDimensions","e","console","log","refDom","clientWidth","clientHeight","setState","chartWidth","state","chartHeight","saveRef","ref","bind","render","fontSize","color","flex","padding","route","exact","componentWillMount","componentWillUnmount","window","removeEventListener","componentWillUpdate"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Breadcrumb,Icon } from 'antd';\nimport { BrowserRouter as Router, Route, Link, Redirect } from \"react-router-dom\";\nimport ProductList from '../Components/ProductList.js'\n\nimport './Product.css'\n\nimport pic1 from '../pic/1.png' \nimport pic2 from '../pic/2.png' \nimport pic3 from '../pic/3.png' \nimport pic4 from '../pic/4.png' \nimport pic5 from '../pic/5.png' \nimport pic6 from '../pic/6.png' \n\nconst routes = [\n  {\n    path: '/',\n    breadcrumbName: 'home',\n    main: () => <ProductList />\n\n  },\n  {\n    path: 'product1',\n    breadcrumbName: 'product1',\n  },\n  {\n    path: 'product2',\n    breadcrumbName: 'product2',\n  },\n  {\n    path: 'product3',\n    breadcrumbName: 'product3',\n  },\n  {\n    path: 'product4',\n    breadcrumbName: 'product4',\n  },\n  {\n    path: 'product5',\n    breadcrumbName: 'product5',\n  },\n  {\n    path: 'product6',\n    breadcrumbName: 'product6',\n  },\n];\nconst { location } = props;\n  const pathSnippets = location.pathname.split('/').filter(i => i);\nconst extraBreadcrumbItems = pathSnippets.map((_, index) => {\n  const url = `/${pathSnippets.slice(0, index + 1).join('/')}`;\n  return (\n    <Breadcrumb.Item key={url}>\n      <Link to={url}>{breadcrumbNameMap[url]}</Link>\n    </Breadcrumb.Item>\n  );\n});\nconst breadcrumbItems = [\n  <Breadcrumb.Item key=\"home\">\n    <Link to=\"/\">Home</Link>\n  </Breadcrumb.Item>,\n].concat(extraBreadcrumbItems);\nclass Product extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      chartWidth:0,\n      chartHeight:250,\n    }      \n    this.saveRef = ref => {this.refDom = ref};\n    this.updateDimensions = this.updateDimensions.bind(this)\n  }\n\n  render() {\n  return (\n      <Router>\n        <br/>\n        <Breadcrumb separator=\">\">\n          <Breadcrumb.Item href=\"\">\n            <Icon type=\"usappstoreer\" />\n            <span style={{fontSize:\"18px\",color:'#C8A065'}}>產品</span>\n          </Breadcrumb.Item>\n        </Breadcrumb>\n        <Breadcrumb separator=\">\">{breadcrumbItems}</Breadcrumb>\n        <div className='Product' ref={this.saveRef} style={{ flex: 1, padding: \"10px\" }}>\n          {routes.map((route, index) => (\n           // Render more <Route>s with the same paths as\n            // above, but different components this time.\n            <Route\n              key={index}\n              path={route.path}\n              exact={route.exact}\n              component={route.main}\n            />\n          ))}\n      \n        </div>\n      </Router>\n    )    \n  }\n  \n  componentWillMount(){\n    console.log('componentWillMount');\n  }\n  componentWillUnmount() {\n    console.log('componentWillUnmount');\n    window.removeEventListener(\"resize\", this.updateDimensions);\n  }\n  componentWillUpdate(){\n    console.log('componentWillUpdate')\n  }\n  updateDimensions = (e) => { \n    console.log(\"StockList updateDimensions\");\n    const {clientWidth, clientHeight} = this.refDom;\n    console.log('====================================');\n    console.log(clientWidth, clientHeight, this.refDom);\n    console.log('====================================');\n    this.setState({\n      chartWidth:clientWidth\n    });\n  }\n}\n\nexport default Product;"]},"metadata":{},"sourceType":"module"}