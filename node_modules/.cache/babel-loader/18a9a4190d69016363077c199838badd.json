{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/React/workspace/src/FrontEnd/Components/AreaChart.js\";\nimport React from 'react';\nimport { Row, Col } from 'antd';\nimport './AreaChart.css';\nimport { XAxis, YAxis, CartesianGrid, Tooltip, AreaChart, Area } from 'recharts';\nimport axios from 'axios';\nimport baseURL from '../Components/AxiosAPI';\nimport { DatePicker } from 'antd';\nimport moment from 'moment';\nconst dateFormat = 'YYYY-MM-DD';\nconst RangePicker = DatePicker.RangePicker;\nconst defaultdata = [{\n  name: 'Page A',\n  uv: 4000\n}, {\n  name: 'Page B',\n  uv: 3000\n}, {\n  name: 'Page C',\n  uv: 2000\n}, {\n  name: 'Page D',\n  uv: 2780\n}, {\n  name: 'Page E',\n  uv: 1890\n}, {\n  name: 'Page F',\n  uv: 2390\n}, {\n  name: 'Page G',\n  uv: 3490\n}, {\n  name: 'Page H',\n  uv: 870\n}, {\n  name: 'Page I',\n  uv: 1490\n}, {\n  name: 'Page J',\n  uv: 9490\n}, {\n  name: \"2019-06-04\",\n  uv: \"2000\"\n}, {\n  name: \"2019-06-04\",\n  uv: \"2500\"\n}];\n\nclass AreaChartItem extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: defaultdata,\n      startDate: '',\n      endDate: ''\n    };\n  }\n\n  render() {\n    return React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(Col, {\n      span: 24,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(RangePicker, {\n      defaultValue: [moment(moment().add('day', -7).format('YYYY-MM-DD'), dateFormat), moment(moment().format('YYYY-MM-DD'), dateFormat)],\n      format: dateFormat,\n      onChange: this.DatePickerFunction.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), React.createElement(AreaChart, {\n      className: \"AreaChart\",\n      width: 1500,\n      height: 700,\n      data: this.state.data,\n      syncId: \"anyId\",\n      margin: {\n        top: 10,\n        right: 30,\n        left: 0,\n        bottom: 0\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(CartesianGrid, {\n      strokeDasharray: \"3 3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), React.createElement(XAxis, {\n      dataKey: \"\\u65E5\\u671F\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), React.createElement(YAxis, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), React.createElement(Tooltip, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }), React.createElement(Area, {\n      type: \"monotone\",\n      dataKey: \"\\u71DF\\u696D\\u984D\",\n      stroke: \"#82ca9d\",\n      fill: \"#82ca9d\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    })))));\n  }\n\n  DatePickerFunction(dates, dateStrings) {\n    console.log('From: ', dates[0], ', to: ', dates[1]);\n    console.log('From: ', dateStrings[0], ', to: ', dateStrings[1]);\n    const data = this.state.data;\n    axios.get(baseURL + '/ShopData/getIncome', {\n      params: {\n        shopname: window.localStorage.getItem('shopname'),\n        branch: window.localStorage.getItem('branch'),\n        start: dateStrings[0],\n        end: dateStrings[1]\n      }\n    }).then(response => {\n      this.setState({\n        data: response.data\n      });\n      console.log(this.state.data);\n    }).catch(function (error) {\n      console.log(error);\n    });\n    this.setState({\n      startDate: dateStrings[0],\n      endDate: dateStrings[1]\n    });\n  }\n\n  componentWillMount() {\n    console.log('componentWillMount');\n    axios.get(baseURL + '/ShopData/getIncome', {\n      params: {\n        shopname: window.localStorage.getItem('shopname'),\n        branch: window.localStorage.getItem('branch'),\n        start: moment().add('day', -7).format('YYYY-MM-DD'),\n        end: moment().format('YYYY-MM-DD')\n      }\n    }).then(response => {\n      this.setState({\n        data: response.data\n      });\n      console.log(this.state.data);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n}\n\nexport default AreaChartItem;","map":{"version":3,"sources":["/Users/mac/Documents/React/workspace/src/FrontEnd/Components/AreaChart.js"],"names":["React","Row","Col","XAxis","YAxis","CartesianGrid","Tooltip","AreaChart","Area","axios","baseURL","DatePicker","moment","dateFormat","RangePicker","defaultdata","name","uv","AreaChartItem","Component","constructor","props","state","data","startDate","endDate","render","add","format","DatePickerFunction","bind","top","right","left","bottom","dates","dateStrings","console","log","get","params","shopname","window","localStorage","getItem","branch","start","end","then","response","setState","catch","error","componentWillMount"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Row, Col } from 'antd';\nimport './AreaChart.css'\nimport {\n    XAxis, YAxis, CartesianGrid, Tooltip,\n    AreaChart, Area,\n  } from 'recharts';\nimport axios from 'axios'\nimport baseURL from '../Components/AxiosAPI'\nimport { DatePicker } from 'antd';\nimport moment from 'moment';\nconst dateFormat = 'YYYY-MM-DD';\nconst { RangePicker } = DatePicker;\n\n  const defaultdata = [\n    {\n      name: 'Page A', uv: 4000,\n    },\n    {\n      name: 'Page B', uv: 3000,\n    },\n    {\n      name: 'Page C', uv: 2000,\n    },\n    {\n      name: 'Page D', uv: 2780,\n    },\n    {\n      name: 'Page E', uv: 1890,\n    },\n    {\n      name: 'Page F', uv: 2390,\n    },\n    {\n      name: 'Page G', uv: 3490,\n    },\n    {\n        name: 'Page H', uv: 870,\n    },\n    {\n        name: 'Page I', uv: 1490,\n    },\n    {\n        name: 'Page J', uv: 9490,\n    },\n    {\n      name: \"2019-06-04\",\n      uv: \"2000\"\n    },\n    {\n      name: \"2019-06-04\",\n      uv: \"2500\"\n    }\n      \n  ];\n\nclass AreaChartItem extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      data:defaultdata,\n      startDate:'',\n      endDate:''\n    }      \n  }\n  render(){\n    return(\n      <Row>\n        <Col span={24}>\n          <div>\n            <RangePicker\n              defaultValue={[moment(moment().add('day',-7).format('YYYY-MM-DD'), dateFormat), moment(moment().format('YYYY-MM-DD'), dateFormat)]}\n              format={dateFormat}\n              onChange={this.DatePickerFunction.bind(this)}\n            />\n            <AreaChart className = \"AreaChart\"\n              width={1500}\n              height={700}\n              data={this.state.data}\n              syncId=\"anyId\"\n              margin={{\n                top: 10, right: 30, left: 0, bottom: 0,\n                }}\n            >\n              <CartesianGrid strokeDasharray=\"3 3\" />\n              <XAxis dataKey=\"日期\" />\n              <YAxis />\n              <Tooltip />\n              <Area type=\"monotone\" dataKey=\"營業額\" stroke=\"#82ca9d\" fill=\"#82ca9d\" />\n            </AreaChart>\n          </div>\n        </Col>\n      </Row>      \n    )\n  }\n  DatePickerFunction(dates, dateStrings) {\n    console.log('From: ', dates[0], ', to: ', dates[1]);\n    console.log('From: ', dateStrings[0], ', to: ', dateStrings[1]);\n    const{data}=this.state\n    axios.get(baseURL+'/ShopData/getIncome',\n      {\n        params: {\n          shopname : window.localStorage.getItem('shopname'),\n          branch : window.localStorage.getItem('branch'),\n          start:dateStrings[0],\n          end:dateStrings[1]\n        }\n      }\n    )\n    .then( (response) =>{\n      this.setState({data:response.data})\n      \n      console.log(this.state.data)\n    })\n    .catch(function (error) {\n      console.log(error);\n    }); \n    this.setState({\n      startDate:dateStrings[0],\n      endDate:dateStrings[1]\n    })\n  }\n  componentWillMount() {\n    console.log('componentWillMount');\n    axios.get(baseURL+'/ShopData/getIncome',\n      {\n        params: {\n          shopname : window.localStorage.getItem('shopname'),\n          branch : window.localStorage.getItem('branch'),\n          start:moment().add('day',-7).format('YYYY-MM-DD'),\n          end:moment().format('YYYY-MM-DD')\n        }\n      }\n    )\n    .then( (response) =>{\n      this.setState({data:response.data})\n      \n      console.log(this.state.data)\n    })\n    .catch(function (error) {\n      console.log(error);\n    });\n    \n  }\n}\n\nexport default AreaChartItem"]},"metadata":{},"sourceType":"module"}