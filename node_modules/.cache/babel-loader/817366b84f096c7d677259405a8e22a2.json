{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/React/workspace/src/FrontEnd/Components/Achieving.js\";\nimport React from 'react';\nimport './Achieving.css';\nimport { DatePicker, Table } from 'antd';\nimport axios from 'axios';\nimport baseURL from './AxiosAPI';\nimport moment from 'moment';\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\nconst MonthPicker = DatePicker.MonthPicker;\nconst monthFormat = 'YYYY-MM';\n\nclass Achieving extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = (pagination, filters, sorter) => {\n      //console.log('Various parameters', pagination, filters, sorter);\n      this.setState({\n        filteredInfo: filters,\n        sortedInfo: sorter\n      });\n    };\n\n    this.updateDimensions = e => {\n      console.log(\"AreaChart updateDimensions\");\n      const _this$refDom = this.refDom,\n            clientWidth = _this$refDom.clientWidth,\n            clientHeight = _this$refDom.clientHeight;\n      console.log('====================================');\n      console.log(clientWidth, clientHeight, this.refDom);\n      console.log('====================================');\n      this.setState({\n        chartWidth: clientWidth\n      });\n    };\n\n    this.state = {\n      data: [],\n      month: moment().format('YYY-MM'),\n      chartWidth: this.props.Width,\n      chartHeight: 500\n    };\n\n    this.saveRef = ref => {\n      this.refDom = ref;\n    };\n\n    this.updateDimensions = this.updateDimensions.bind(this);\n  }\n\n  render() {\n    let sortedInfo = this.state.sortedInfo;\n    sortedInfo = sortedInfo || {};\n    const columns = [{\n      title: '品項',\n      dataIndex: 'title',\n      key: 'title',\n      width: '10%'\n    }, {\n      title: '總進貨',\n      dataIndex: '總進貨',\n      key: '總進貨',\n      width: '30%',\n      defaultSortOrder: 'descend',\n      sorter: (a, b) => a.總進貨 - b.總進貨,\n      sortOrder: sortedInfo.columnKey === '總進貨' && sortedInfo.order\n    }, {\n      title: '總銷售',\n      dataIndex: '總銷售',\n      key: '總銷售',\n      width: '30%',\n      sorter: (a, b) => a.總銷售 - b.總銷售,\n      sortOrder: sortedInfo.columnKey === '總銷售' && sortedInfo.order\n    }, {\n      title: '報廢',\n      dataIndex: '報廢',\n      key: '報廢',\n      width: '30%',\n      sorter: (a, b) => a.報廢 - b.報廢,\n      sortOrder: sortedInfo.columnKey === '報廢' && sortedInfo.order\n    }];\n    const _this$state = this.state,\n          chartWidth = _this$state.chartWidth,\n          data = _this$state.data;\n    return React.createElement(\"div\", {\n      ref: this.saveRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(MonthPicker, {\n      defaultValue: moment(this.state.month, monthFormat),\n      format: monthFormat,\n      onChange: this.MonthPickerFunction.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), React.createElement(BarChart, {\n      width: chartWidth,\n      height: 500,\n      data: data,\n      margin: {\n        top: 20,\n        right: 30,\n        left: 20,\n        bottom: 5\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(CartesianGrid, {\n      strokeDasharray: \"3 3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }), React.createElement(XAxis, {\n      dataKey: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }), React.createElement(YAxis, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), React.createElement(Tooltip, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), React.createElement(Legend, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }), React.createElement(Bar, {\n      dataKey: \"\\u7E3D\\u92B7\\u552E\",\n      stackId: \"a\",\n      fill: \"#8884d8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), React.createElement(Bar, {\n      dataKey: \"\\u5831\\u5EE2\",\n      stackId: \"a\",\n      fill: \"#ff0000\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), React.createElement(Bar, {\n      dataKey: \"\\u4E0A\\u6708\\u5EAB\\u5B58\",\n      stackId: \"b\",\n      fill: \"#82ca9d\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), React.createElement(Bar, {\n      dataKey: \"\\u7E3D\\u9032\\u8CA8\",\n      stackId: \"b\",\n      fill: \"#82ca9d\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    })), React.createElement(Table, {\n      columns: columns,\n      dataSource: this.state.data,\n      size: \"small\",\n      pagination: false,\n      scroll: {\n        y: 240\n      },\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }));\n  }\n  /***********************handleChange********************************************/\n\n\n  /***********************componentWillMount********************************************/\n  componentWillMount() {\n    window.addEventListener(\"resize\", this.updateDimensions);\n    var month = window.localStorage.getItem('AchievingPageDate_Month');\n    var lastmonth;\n\n    if (month === null) {\n      month = moment().format('YYYY-MM');\n    }\n\n    lastmonth = moment(month).add('month', -1).format('YYYY-MM');\n    axios.get(baseURL + '/ShopData/getAchieving', {\n      params: {\n        shopname: window.localStorage.getItem('shopname'),\n        branch: window.localStorage.getItem('branch'),\n        month: month,\n        lastmonth: lastmonth\n      }\n    }).then(response => {\n      this.setState({\n        data: response.data\n      });\n      console.log(this.state.data);\n    }).catch(function (error) {\n      console.log(error);\n    });\n    this.setState({\n      month: month\n    });\n  }\n  /***********************componentWillUnmount********************************************/\n\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.updateDimensions);\n  }\n\n  componentWillUpdate() {}\n  /***********************updateDimensions********************************************/\n\n\n  /***********************MonthPickerFunction********************************************/\n  MonthPickerFunction(dates, dateStrings) {\n    var lastmonth;\n    window.localStorage.setItem(\"AchievingPageDate_Month\", dateStrings);\n    lastmonth = moment(dateStrings).add('month', -1).format('YYYY-MM');\n    axios.get(baseURL + '/ShopData/getAchieving', {\n      params: {\n        shopname: window.localStorage.getItem('shopname'),\n        branch: window.localStorage.getItem('branch'),\n        month: dateStrings,\n        lastmonth: lastmonth\n      }\n    }).then(response => {\n      this.setState({\n        data: response.data\n      });\n      console.log(this.state.data);\n    }).catch(function (error) {\n      console.log(error);\n    });\n    this.setState({\n      month: dateStrings\n    });\n  }\n\n}\n\nexport default Achieving;","map":{"version":3,"sources":["/Users/mac/Documents/React/workspace/src/FrontEnd/Components/Achieving.js"],"names":["React","DatePicker","Table","axios","baseURL","moment","BarChart","Bar","XAxis","YAxis","CartesianGrid","Tooltip","Legend","MonthPicker","monthFormat","Achieving","Component","constructor","props","handleChange","pagination","filters","sorter","setState","filteredInfo","sortedInfo","updateDimensions","e","console","log","refDom","clientWidth","clientHeight","chartWidth","state","data","month","format","Width","chartHeight","saveRef","ref","bind","render","columns","title","dataIndex","key","width","defaultSortOrder","a","b","總進貨","sortOrder","columnKey","order","總銷售","報廢","MonthPickerFunction","top","right","left","bottom","y","componentWillMount","window","addEventListener","localStorage","getItem","lastmonth","add","get","params","shopname","branch","then","response","catch","error","componentWillUnmount","removeEventListener","componentWillUpdate","dates","dateStrings","setItem"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './Achieving.css'\nimport { DatePicker, Table } from 'antd';\nimport axios from 'axios'\nimport baseURL from './AxiosAPI'\nimport moment from 'moment';\nimport {\n    BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend,\n  } from 'recharts';\nconst {MonthPicker} = DatePicker;\nconst monthFormat = 'YYYY-MM';\n\nclass Achieving extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      data:[],\n      month:moment().format('YYY-MM'),\n      chartWidth:this.props.Width,\n      chartHeight:500,\n      \n    }      \n    this.saveRef = ref => {this.refDom = ref};\n    this.updateDimensions = this.updateDimensions.bind(this)\n  }\n  render(){\n    let { sortedInfo } = this.state;\n        sortedInfo = sortedInfo || {};\n    const columns = [\n      {\n        title: '品項',\n        dataIndex: 'title',\n        key: 'title',\n        width:'10%',\n      },\n      {\n        title: '總進貨',\n        dataIndex: '總進貨',\n        key: '總進貨',\n        width:'30%',\n        defaultSortOrder: 'descend',\n        sorter: (a, b) => a.總進貨 - b.總進貨,\n        sortOrder: sortedInfo.columnKey === '總進貨' && sortedInfo.order,\n      },\n      {\n        title: '總銷售',\n        dataIndex: '總銷售',\n        key: '總銷售',\n        width:'30%',\n        sorter: (a, b) => a.總銷售 - b.總銷售,\n        sortOrder: sortedInfo.columnKey === '總銷售' && sortedInfo.order,\n      },\n      {\n        title: '報廢',\n        dataIndex: '報廢',\n        key: '報廢',\n        width:'30%',\n        sorter: (a, b) => a.報廢 - b.報廢,\n        sortOrder: sortedInfo.columnKey === '報廢' && sortedInfo.order,\n      }\n    ];\n    const{chartWidth,data}=this.state\n    return(\n      <div ref={this.saveRef}>\n        <MonthPicker \n          defaultValue={moment(this.state.month, monthFormat)} \n          format={monthFormat} \n          onChange={this.MonthPickerFunction.bind(this)}\n          />\n        <BarChart\n          width={chartWidth}\n          height={500}\n          data={data}\n          margin={{\n            top: 20, right: 30, left: 20, bottom: 5,\n          }}\n          >\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <XAxis dataKey=\"title\" />\n          <YAxis />\n          <Tooltip />\n          <Legend />\n          \n          <Bar dataKey=\"總銷售\" stackId=\"a\" fill=\"#8884d8\" />\n          <Bar dataKey=\"報廢\" stackId=\"a\" fill=\"#ff0000\" />\n          <Bar dataKey=\"上月庫存\" stackId=\"b\" fill=\"#82ca9d\" />\n          <Bar dataKey=\"總進貨\" stackId=\"b\" fill=\"#82ca9d\" />\n        </BarChart>\n        <Table columns={columns} dataSource={this.state.data} size='small' pagination={false} scroll={{ y: 240 }} onChange={this.handleChange} />\n      </div>\n    )\n  }\n  /***********************handleChange********************************************/\n  handleChange = (pagination, filters, sorter) => {\n    //console.log('Various parameters', pagination, filters, sorter);\n    this.setState({\n      filteredInfo: filters,\n      sortedInfo: sorter,\n    });\n  };\n  /***********************componentWillMount********************************************/\n  componentWillMount(){\n    window.addEventListener(\"resize\", this.updateDimensions);\n    var month = window.localStorage.getItem('AchievingPageDate_Month');\n    var lastmonth;\n    if(month === null){\n      month = moment().format('YYYY-MM');\n    }\n    lastmonth = moment(month).add('month',-1).format('YYYY-MM');\n    axios.get(baseURL+'/ShopData/getAchieving',\n    {\n      params: {\n        shopname : window.localStorage.getItem('shopname'),\n        branch :  window.localStorage.getItem('branch'),\n        month: month,\n        lastmonth:lastmonth\n      }\n    })\n    .then( (response) =>{\n      this.setState({data:response.data})  \n      console.log(this.state.data)\n    })\n    .catch(function (error) {\n      console.log(error);\n    }); \n    this.setState({\n      month:month})\n  }\n  /***********************componentWillUnmount********************************************/\n  componentWillUnmount(){\n    window.removeEventListener(\"resize\", this.updateDimensions);\n  }\n  componentWillUpdate(){\n\n  }\n  /***********************updateDimensions********************************************/\n  updateDimensions = (e) => { \n    console.log(\"AreaChart updateDimensions\");\n    const {clientWidth, clientHeight} = this.refDom;\n    console.log('====================================');\n    console.log(clientWidth, clientHeight, this.refDom);\n    console.log('====================================');\n    this.setState({\n      chartWidth:clientWidth\n    });\n  }\n  /***********************MonthPickerFunction********************************************/\n  MonthPickerFunction(dates, dateStrings) {\n    var lastmonth;\n    window.localStorage.setItem(\"AchievingPageDate_Month\",dateStrings)\n    lastmonth = moment(dateStrings).add('month',-1).format('YYYY-MM');\n    axios.get(baseURL+'/ShopData/getAchieving',\n    {\n      params: {\n        shopname : window.localStorage.getItem('shopname'),\n        branch :  window.localStorage.getItem('branch'),\n        month: dateStrings,\n        lastmonth:lastmonth\n      }\n    })\n    .then( (response) =>{\n      this.setState({data:response.data})  \n      console.log(this.state.data)\n    })\n    .catch(function (error) {\n      console.log(error);\n    }); \n    this.setState({\n      month:dateStrings})\n  }\n}\n\nexport default Achieving"]},"metadata":{},"sourceType":"module"}