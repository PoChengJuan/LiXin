{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/React/LiXin/src/FrontEnd/Components/ShoppingCar.js\";\nimport React from 'react';\nimport { Row, Col, Typography } from 'antd';\nimport './ShoppingCar.css';\nconst Title = Typography.Title;\n\nclass ShoppingCar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.updateDimensions = e => {\n      console.log(\"AreaChart updateDimensions\");\n      const _this$refDom = this.refDom,\n            clientWidth = _this$refDom.clientWidth,\n            clientHeight = _this$refDom.clientHeight;\n      console.log('====================================');\n      console.log(clientWidth, clientHeight, this.refDom);\n      console.log('====================================');\n      this.setState({\n        chartWidth: clientWidth\n      });\n    };\n\n    this.state = {\n      chartWidth: this.props.Width,\n      chartHeight: 500\n    };\n\n    this.saveRef = ref => {\n      this.refDom = ref;\n    };\n\n    this.updateDimensions = this.updateDimensions.bind(this);\n  }\n\n  render() {\n    return React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, React.createElement(Col, {\n      span: 24,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, React.createElement(Title, {\n      level: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, \"Coming soon...\")));\n  }\n\n  componentWillMount(e) {\n    console.log('componentWillMount');\n  }\n\n  componentWillUnmount() {\n    console.log('componentWillUnmount');\n    window.removeEventListener(\"resize\", this.updateDimensions);\n  }\n\n  componentWillUpdate() {\n    console.log('componentWillUpdate');\n  }\n\n}\n\nexport default ShoppingCar;","map":{"version":3,"sources":["/Users/mac/Documents/React/LiXin/src/FrontEnd/Components/ShoppingCar.js"],"names":["React","Row","Col","Typography","Title","ShoppingCar","Component","constructor","props","updateDimensions","e","console","log","refDom","clientWidth","clientHeight","setState","chartWidth","state","Width","chartHeight","saveRef","ref","bind","render","componentWillMount","componentWillUnmount","window","removeEventListener","componentWillUpdate"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,GAAd,EAAkBC,UAAlB,QAAoC,MAApC;AACA,OAAO,mBAAP;MAEMC,K,GAASD,U,CAATC,K;;AAGN,MAAMC,WAAN,SAA0BL,KAAK,CAACM,SAAhC,CAAyC;AACvCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;;AADgB,SAwBlBC,gBAxBkB,GAwBEC,CAAD,IAAO;AACpBC,MAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AADoB,2BAEgB,KAAKC,MAFrB;AAAA,YAEbC,WAFa,gBAEbA,WAFa;AAAA,YAEAC,YAFA,gBAEAA,YAFA;AAGxBJ,MAAAA,OAAO,CAACC,GAAR,CAAY,sCAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYE,WAAZ,EAAyBC,YAAzB,EAAuC,KAAKF,MAA5C;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAY,sCAAZ;AACA,WAAKI,QAAL,CAAc;AACZC,QAAAA,UAAU,EAACH;AADC,OAAd;AAGD,KAjCiB;;AAEhB,SAAKI,KAAL,GAAa;AACXD,MAAAA,UAAU,EAAC,KAAKT,KAAL,CAAWW,KADX;AAEXC,MAAAA,WAAW,EAAC;AAFD,KAAb;;AAIA,SAAKC,OAAL,GAAeC,GAAG,IAAI;AAAC,WAAKT,MAAL,GAAcS,GAAd;AAAkB,KAAzC;;AACA,SAAKb,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBc,IAAtB,CAA2B,IAA3B,CAAxB;AACD;;AACDC,EAAAA,MAAM,GAAE;AACN,WACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,GAAD;AAAK,MAAA,IAAI,EAAE,EAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAE,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,CADF,CADF;AAOD;;AAGDC,EAAAA,kBAAkB,CAACf,CAAD,EAAI;AACpBC,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AAED;;AAWDc,EAAAA,oBAAoB,GAAG;AACrBf,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACAe,IAAAA,MAAM,CAACC,mBAAP,CAA2B,QAA3B,EAAqC,KAAKnB,gBAA1C;AACD;;AACDoB,EAAAA,mBAAmB,GAAE;AACnBlB,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACD;;AAzCsC;;AA4CzC,eAAeP,WAAf","sourcesContent":["import React from 'react';\nimport { Row, Col,Typography } from 'antd';\nimport './ShoppingCar.css'\n\nconst{Title} = Typography\n\n\nclass ShoppingCar extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      chartWidth:this.props.Width,\n      chartHeight:500\n    }      \n    this.saveRef = ref => {this.refDom = ref};\n    this.updateDimensions = this.updateDimensions.bind(this)\n  }\n  render(){\n    return(\n      <Row>\n        <Col span={24}>\n          <Title level={2}>Coming soon...</Title>\n        </Col>\n      </Row>      \n    )\n  }\n\n  \n  componentWillMount(e) {\n    console.log('componentWillMount');\n    \n  }\n  updateDimensions = (e) => { \n        console.log(\"AreaChart updateDimensions\");\n        const {clientWidth, clientHeight} = this.refDom;\n    console.log('====================================');\n    console.log(clientWidth, clientHeight, this.refDom);\n    console.log('====================================');\n    this.setState({\n      chartWidth:clientWidth\n    });\n  }\n  componentWillUnmount() {\n    console.log('componentWillUnmount');\n    window.removeEventListener(\"resize\", this.updateDimensions);\n  }\n  componentWillUpdate(){\n    console.log('componentWillUpdate');\n  }\n}\n\nexport default ShoppingCar"]},"metadata":{},"sourceType":"module"}