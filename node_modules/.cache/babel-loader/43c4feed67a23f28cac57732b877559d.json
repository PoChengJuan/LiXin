{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/React/LiXin/src/FrontEnd/Components/Contact.js\";\nimport React from 'react';\nimport './Contact.css';\nimport { Typography, Icon } from 'antd';\nimport axios from 'axios';\nimport baseURL from './AxiosAPI';\nimport moment from 'moment';\nimport { withGoogleMap, GoogleMap, Marker } from \"react-google-maps\";\nconst Title = Typography.Title,\n      Paragraph = Typography.Paragraph,\n      Text = Typography.Text;\n\nclass Achieving extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.updateDimensions = e => {\n      console.log(\"AreaChart updateDimensions\");\n      const _this$refDom = this.refDom,\n            clientWidth = _this$refDom.clientWidth,\n            clientHeight = _this$refDom.clientHeight;\n      console.log('====================================');\n      console.log(clientWidth, clientHeight, this.refDom);\n      console.log('====================================');\n      this.setState({\n        chartWidth: clientWidth\n      });\n    };\n\n    this.DataUpdate = (lastmonth, month) => {\n      axios.get(baseURL + '/ShopData/getAchieving', {\n        params: {\n          shopname: window.localStorage.getItem('shopname'),\n          branch: window.localStorage.getItem('branch'),\n          month: month,\n          lastmonth: lastmonth\n        }\n      }).then(response => {\n        this.setState({\n          data: response.data\n        });\n        console.log(this.state.data);\n      }).catch(function (error) {\n        console.log(error);\n      });\n      this.setState({\n        month: month\n      });\n    };\n\n    this.state = {\n      data: [],\n      month: moment().format('YYY-MM'),\n      chartWidth: this.props.Width,\n      chartHeight: 500\n    };\n\n    this.saveRef = ref => {\n      this.refDom = ref;\n    };\n\n    this.updateDimensions = this.updateDimensions.bind(this);\n  }\n\n  render() {\n    const _this$state = this.state,\n          chartWidth = _this$state.chartWidth,\n          data = _this$state.data;\n    return React.createElement(\"div\", {\n      className: \"Contact\",\n      ref: this.saveRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, \"\\u806F\\u7D61\\u6211\\u5011\"), React.createElement(Paragraph, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      type: \"home\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }), \" \\u516C\\u53F8\\u5730\\u5740\\uFF1A\\u53F0\\u5357\\u5E02\\u4E2D\\u897F\\u5340\\u6C38\\u798F\\u8DEF\\u4E8C\\u6BB5219\\u865F3\\u6A13\"), React.createElement(Paragraph, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      type: \"phone\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }), \" \\u96FB \\u8A71\\uFF1A(06)222-8560\\u3001(06)222-6086\"), React.createElement(Paragraph, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      type: \"file-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }), \" \\u50B3 \\u771F\\uFF1A(06)222-3136\"), React.createElement(Paragraph, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      type: \"mail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }), \" E - mail\\uFF1Aka3354857@gmail.com\"), React.createElement(Paragraph, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \"\\u7D71\\u4E00\\u7DE8\\u865F\\uFF1A42902873\"), React.createElement(Paragraph, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \"\\u71DF\\u696D\\u6642\\u9593\\uFF1A\\u9031\\u4E00\\u81F3\\u9031\\u4E94 / AM09:00~PM18:00\"), React.createElement(Paragraph, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, \"\\u3010\\u98DF\\u54C1\\u696D\\u8005\\u767B\\u9304\\u5B57\\u865F\\uFF1AD-142902873-00000-6\\u3011\"));\n  }\n  /***********************componentWillMount********************************************/\n\n\n  componentWillMount() {}\n  /***********************componentWillUnmount********************************************/\n\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.updateDimensions);\n  }\n\n  componentWillUpdate() {}\n  /***********************updateDimensions********************************************/\n\n\n  /***********************MonthPickerFunction********************************************/\n  MonthPickerFunction(dates, dateStrings) {\n    var lastmonth;\n    window.localStorage.setItem(\"AchievingPageDate_Month\", dateStrings);\n    lastmonth = moment(dateStrings).add('month', -1).format('YYYY-MM');\n    this.DataUpdate(lastmonth, dateStrings);\n  }\n  /***********************DataUpdate****************************************************/\n\n\n}\n\nexport default Achieving;","map":{"version":3,"sources":["/Users/mac/Documents/React/LiXin/src/FrontEnd/Components/Contact.js"],"names":["React","Typography","Icon","axios","baseURL","moment","withGoogleMap","GoogleMap","Marker","Title","Paragraph","Text","Achieving","Component","constructor","props","updateDimensions","e","console","log","refDom","clientWidth","clientHeight","setState","chartWidth","DataUpdate","lastmonth","month","get","params","shopname","window","localStorage","getItem","branch","then","response","data","state","catch","error","format","Width","chartHeight","saveRef","ref","bind","render","componentWillMount","componentWillUnmount","removeEventListener","componentWillUpdate","MonthPickerFunction","dates","dateStrings","setItem","add"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,eAAP;AACA,SAASC,UAAT,EAAoBC,IAApB,QAAgC,MAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SACEC,aADF,EAEEC,SAFF,EAGEC,MAHF,QAIO,mBAJP;MAKQC,K,GAA2BR,U,CAA3BQ,K;MAAOC,S,GAAoBT,U,CAApBS,S;MAAWC,I,GAASV,U,CAATU,I;;AAC1B,MAAMC,SAAN,SAAwBZ,KAAK,CAACa,SAA9B,CAAuC;AACrCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;;AADgB,SAuClBC,gBAvCkB,GAuCEC,CAAD,IAAO;AACxBC,MAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AADwB,2BAEY,KAAKC,MAFjB;AAAA,YAEjBC,WAFiB,gBAEjBA,WAFiB;AAAA,YAEJC,YAFI,gBAEJA,YAFI;AAGxBJ,MAAAA,OAAO,CAACC,GAAR,CAAY,sCAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYE,WAAZ,EAAyBC,YAAzB,EAAuC,KAAKF,MAA5C;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAY,sCAAZ;AACA,WAAKI,QAAL,CAAc;AACZC,QAAAA,UAAU,EAACH;AADC,OAAd;AAGD,KAhDiB;;AAAA,SAyDlBI,UAzDkB,GAyDL,CAACC,SAAD,EAAWC,KAAX,KAAqB;AAChCxB,MAAAA,KAAK,CAACyB,GAAN,CAAUxB,OAAO,GAAC,wBAAlB,EACA;AACEyB,QAAAA,MAAM,EAAE;AACNC,UAAAA,QAAQ,EAAGC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,UAA5B,CADL;AAENC,UAAAA,MAAM,EAAIH,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,QAA5B,CAFJ;AAGNN,UAAAA,KAAK,EAAEA,KAHD;AAIND,UAAAA,SAAS,EAACA;AAJJ;AADV,OADA,EASCS,IATD,CASQC,QAAD,IAAa;AAClB,aAAKb,QAAL,CAAc;AAACc,UAAAA,IAAI,EAACD,QAAQ,CAACC;AAAf,SAAd;AACAnB,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKmB,KAAL,CAAWD,IAAvB;AACD,OAZD,EAaCE,KAbD,CAaO,UAAUC,KAAV,EAAiB;AACtBtB,QAAAA,OAAO,CAACC,GAAR,CAAYqB,KAAZ;AACD,OAfD;AAgBA,WAAKjB,QAAL,CAAc;AACZI,QAAAA,KAAK,EAACA;AADM,OAAd;AAED,KA5EiB;;AAEhB,SAAKW,KAAL,GAAa;AACXD,MAAAA,IAAI,EAAC,EADM;AAEXV,MAAAA,KAAK,EAACtB,MAAM,GAAGoC,MAAT,CAAgB,QAAhB,CAFK;AAGXjB,MAAAA,UAAU,EAAC,KAAKT,KAAL,CAAW2B,KAHX;AAIXC,MAAAA,WAAW,EAAC;AAJD,KAAb;;AAOA,SAAKC,OAAL,GAAeC,GAAG,IAAI;AAAC,WAAKzB,MAAL,GAAcyB,GAAd;AAAkB,KAAzC;;AACA,SAAK7B,gBAAL,GAAwB,KAAKA,gBAAL,CAAsB8B,IAAtB,CAA2B,IAA3B,CAAxB;AACD;;AACDC,EAAAA,MAAM,GAAE;AAAA,wBACiB,KAAKT,KADtB;AAAA,UACAd,UADA,eACAA,UADA;AAAA,UACWa,IADX,eACWA,IADX;AAEN,WACE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAyB,MAAA,GAAG,EAAE,KAAKO,OAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADF,EAEE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAW,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAX,sHAFF,EAGE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAW,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAC,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAX,uDAHF,EAIE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAW,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAC,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAX,qCAJF,EAKE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAW,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAX,uCALF,EAME,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gDANF,EAOE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wFAPF,EAQE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+FARF,CADF;AAYD;AACD;;;AACAI,EAAAA,kBAAkB,GAAE,CAEnB;AACD;;;AACAC,EAAAA,oBAAoB,GAAE;AACpBlB,IAAAA,MAAM,CAACmB,mBAAP,CAA2B,QAA3B,EAAqC,KAAKlC,gBAA1C;AACD;;AACDmC,EAAAA,mBAAmB,GAAE,CAEpB;AACD;;;AAWA;AACAC,EAAAA,mBAAmB,CAACC,KAAD,EAAQC,WAAR,EAAqB;AACtC,QAAI5B,SAAJ;AACAK,IAAAA,MAAM,CAACC,YAAP,CAAoBuB,OAApB,CAA4B,yBAA5B,EAAsDD,WAAtD;AACA5B,IAAAA,SAAS,GAAGrB,MAAM,CAACiD,WAAD,CAAN,CAAoBE,GAApB,CAAwB,OAAxB,EAAgC,CAAC,CAAjC,EAAoCf,MAApC,CAA2C,SAA3C,CAAZ;AACA,SAAKhB,UAAL,CAAgBC,SAAhB,EAA0B4B,WAA1B;AACD;AACD;;;AAzDqC;;AAgFvC,eAAe1C,SAAf","sourcesContent":["import React from 'react';\nimport './Contact.css'\nimport { Typography,Icon } from 'antd';\nimport axios from 'axios'\nimport baseURL from './AxiosAPI'\nimport moment from 'moment';\nimport {\n  withGoogleMap,\n  GoogleMap,\n  Marker,\n} from \"react-google-maps\";\nconst { Title, Paragraph, Text } = Typography;\nclass Achieving extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      data:[],\n      month:moment().format('YYY-MM'),\n      chartWidth:this.props.Width,\n      chartHeight:500,\n      \n    }      \n    this.saveRef = ref => {this.refDom = ref};\n    this.updateDimensions = this.updateDimensions.bind(this)\n  }\n  render(){\n    const{chartWidth,data}=this.state\n    return(\n      <div className='Contact' ref={this.saveRef}>\n        <Title>聯絡我們</Title>\n        <Paragraph><Icon type=\"home\" /> 公司地址：台南市中西區永福路二段219號3樓</Paragraph>\n        <Paragraph><Icon type=\"phone\" /> 電 話：(06)222-8560、(06)222-6086</Paragraph>\n        <Paragraph><Icon type=\"file-text\" /> 傳 真：(06)222-3136</Paragraph>\n        <Paragraph><Icon type=\"mail\" /> E - mail：ka3354857@gmail.com</Paragraph>\n        <Paragraph>統一編號：42902873</Paragraph>\n        <Paragraph>營業時間：週一至週五 / AM09:00~PM18:00</Paragraph>\n        <Paragraph>【食品業者登錄字號：D-142902873-00000-6】</Paragraph>\n      </div>\n    )\n  }\n  /***********************componentWillMount********************************************/\n  componentWillMount(){\n    \n  }\n  /***********************componentWillUnmount********************************************/\n  componentWillUnmount(){\n    window.removeEventListener(\"resize\", this.updateDimensions);\n  }\n  componentWillUpdate(){\n\n  }\n  /***********************updateDimensions********************************************/\n  updateDimensions = (e) => { \n    console.log(\"AreaChart updateDimensions\");\n    const {clientWidth, clientHeight} = this.refDom;\n    console.log('====================================');\n    console.log(clientWidth, clientHeight, this.refDom);\n    console.log('====================================');\n    this.setState({\n      chartWidth:clientWidth\n    });\n  }\n  /***********************MonthPickerFunction********************************************/\n  MonthPickerFunction(dates, dateStrings) {\n    var lastmonth;\n    window.localStorage.setItem(\"AchievingPageDate_Month\",dateStrings)\n    lastmonth = moment(dateStrings).add('month',-1).format('YYYY-MM');\n    this.DataUpdate(lastmonth,dateStrings);\n  }\n  /***********************DataUpdate****************************************************/\n  DataUpdate = (lastmonth,month) => {\n    axios.get(baseURL+'/ShopData/getAchieving',\n    {\n      params: {\n        shopname : window.localStorage.getItem('shopname'),\n        branch :  window.localStorage.getItem('branch'),\n        month: month,\n        lastmonth:lastmonth\n      }\n    })\n    .then( (response) =>{\n      this.setState({data:response.data})  \n      console.log(this.state.data)\n    })\n    .catch(function (error) {\n      console.log(error);\n    }); \n    this.setState({\n      month:month})\n  }\n}\n\nexport default Achieving"]},"metadata":{},"sourceType":"module"}