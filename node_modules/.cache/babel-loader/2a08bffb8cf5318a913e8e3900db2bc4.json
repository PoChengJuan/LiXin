{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/React/workspace/src/FrontEnd/Components/Statistics.js\";\nimport React from 'react';\nimport './Statistics.css';\nimport { Table, Button, DatePicker } from 'antd';\nimport axios from 'axios';\nimport baseURL from './AxiosAPI';\nimport moment from 'moment';\nconst MonthPicker = DatePicker.MonthPicker;\nconst monthFormat = 'YYYY-MM';\nconst TotalOrder_columns = [{\n  title: '品項',\n  dataIndex: 'title',\n  key: 'title',\n  render: text => React.createElement(\"a\", {\n    href: \"javascript:;\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, text)\n}, {\n  title: '叫貨量',\n  dataIndex: 'order',\n  key: 'order',\n  width: '2cm'\n}];\nconst TotalScrap_columns = [{\n  title: '品項',\n  dataIndex: 'title',\n  key: 'title',\n  render: text => React.createElement(\"a\", {\n    href: \"javascript:;\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, text)\n}, {\n  title: '叫貨量',\n  dataIndex: 'order',\n  key: 'order',\n  width: '2cm'\n}];\n\nclass Statistics extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      month: moment().format('YYYY-MM')\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(MonthPicker, {\n      defaultValue: moment(this.state.month, monthFormat),\n      format: monthFormat,\n      onChange: this.MonthPickerFunction.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"\\u7E3D\\u9032\\u8CA8\"), React.createElement(Table, {\n      columns: TotalOrder_columns,\n      dataSource: this.state.income,\n      size: \"small\",\n      pagination: false,\n      scroll: {\n        y: 240\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"\\u7E3D\\u5831\\u5EE2\"), React.createElement(Table, {\n      columns: TotalScrap_columns,\n      dataSource: this.state.income,\n      size: \"small\",\n      pagination: false,\n      scroll: {\n        y: 240\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"\\u7E3D\\u71DF\\u6536\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"\\u7E3D\\u652F\\u51FA\"));\n  }\n  /***********************MonthPickerFunction********************************************/\n\n\n  MonthPickerFunction(dates, dateStrings) {\n    var lastmonth;\n    /*window.localStorage.setItem(\"AchievingPageDate_Month\",dateStrings)\n    lastmonth = moment(dateStrings).add('month',-1).format('YYYY-MM');\n    axios.get(baseURL+'/ShopData/getAchieving',\n    {\n      params: {\n        shopname : window.localStorage.getItem('shopname'),\n        branch :  window.localStorage.getItem('branch'),\n        month: dateStrings,\n        lastmonth:lastmonth\n      }\n    })\n    .then( (response) =>{\n      this.setState({data:response.data})  \n      console.log(this.state.data)\n    })\n    .catch(function (error) {\n      console.log(error);\n    }); \n    this.setState({\n      month:dateStrings})*/\n  }\n\n}\n\nexport default Statistics;","map":{"version":3,"sources":["/Users/mac/Documents/React/workspace/src/FrontEnd/Components/Statistics.js"],"names":["React","Table","Button","DatePicker","axios","baseURL","moment","MonthPicker","monthFormat","TotalOrder_columns","title","dataIndex","key","render","text","width","TotalScrap_columns","Statistics","Component","constructor","props","state","month","format","MonthPickerFunction","bind","income","y","dates","dateStrings","lastmonth"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './Statistics.css'\nimport { Table, Button, DatePicker } from 'antd';\nimport axios from 'axios'\nimport baseURL from './AxiosAPI'\nimport moment from 'moment';\nconst {MonthPicker} = DatePicker;\nconst monthFormat = 'YYYY-MM';\n\nconst TotalOrder_columns = [\n  {\n    title: '品項',\n    dataIndex: 'title',\n    key: 'title',\n    render: text => <a href=\"javascript:;\">{text}</a>,\n  },\n  {\n    title: '叫貨量',\n    dataIndex: 'order',\n    key: 'order',\n    width:'2cm',\n  }\n];\nconst TotalScrap_columns = [\n  {\n    title: '品項',\n    dataIndex: 'title',\n    key: 'title',\n    render: text => <a href=\"javascript:;\">{text}</a>,\n  },\n  {\n    title: '叫貨量',\n    dataIndex: 'order',\n    key: 'order',\n    width:'2cm',\n  }\n];\nclass Statistics extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      month:moment().format('YYYY-MM'),\n    }\n  }\n  render(){\n    return(\n      <div>\n        <MonthPicker \n          defaultValue={moment(this.state.month, monthFormat)} \n          format={monthFormat} \n          onChange={this.MonthPickerFunction.bind(this)}\n        />\n        <p>總進貨</p>\n          <Table columns={TotalOrder_columns} dataSource={this.state.income} size='small' pagination={false} scroll={{ y: 240 }} />\n        <p>總報廢</p>\n          <Table columns={TotalScrap_columns} dataSource={this.state.income} size='small' pagination={false} scroll={{ y: 240 }} />\n        <p>總營收</p>\n        <p>總支出</p>\n      </div>\n    )\n  }\n    /***********************MonthPickerFunction********************************************/\n  MonthPickerFunction(dates, dateStrings) {\n    var lastmonth;\n    /*window.localStorage.setItem(\"AchievingPageDate_Month\",dateStrings)\n    lastmonth = moment(dateStrings).add('month',-1).format('YYYY-MM');\n    axios.get(baseURL+'/ShopData/getAchieving',\n    {\n      params: {\n        shopname : window.localStorage.getItem('shopname'),\n        branch :  window.localStorage.getItem('branch'),\n        month: dateStrings,\n        lastmonth:lastmonth\n      }\n    })\n    .then( (response) =>{\n      this.setState({data:response.data})  \n      console.log(this.state.data)\n    })\n    .catch(function (error) {\n      console.log(error);\n    }); \n    this.setState({\n      month:dateStrings})*/\n  }\n}\n\nexport default Statistics"]},"metadata":{},"sourceType":"module"}