{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/React/workspace/src/FrontEnd/Components/abcd.js\";\nimport React, { PureComponent } from 'react';\nimport { Label, LineChart, Line, CartesianGrid, XAxis, YAxis, Tooltip, ReferenceArea } from 'recharts';\nimport { DatePicker, Button } from 'antd';\nimport moment from 'moment';\nimport axios from 'axios';\nimport baseURL from '../Components/AxiosAPI';\nimport './abcd.css';\nconst dateFormat = 'YYYY-MM-DD';\nconst RangePicker = DatePicker.RangePicker;\nconst initialState = {\n  left: 'dataMin',\n  right: 'dataMax',\n  refAreaLeft: '',\n  refAreaRight: '',\n  top: 'dataMax+1',\n  bottom: 'dataMin-1',\n  top2: 'dataMax+20',\n  bottom2: 'dataMin-20',\n  animation: true,\n  incomedata: '',\n  expensedata: '',\n  chartWidth: 1500,\n  chartHeight: 700\n};\n\nclass Abc extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.updateDimensions = e => {\n      console.log(\"AreaChart updateDimensions\");\n      const _this$refDom = this.refDom,\n            clientWidth = _this$refDom.clientWidth,\n            clientHeight = _this$refDom.clientHeight;\n      console.log('====================================');\n      console.log(clientWidth, clientHeight, this.refDom);\n      console.log('====================================');\n      this.setState({\n        chartWidth: clientWidth\n      });\n    };\n\n    this.state = initialState;\n\n    this.saveRef = ref => {\n      this.refDom = ref;\n    };\n\n    this.updateDimensions = this.updateDimensions.bind(this);\n  }\n\n  render() {\n    const _this$state = this.state,\n          data = _this$state.data,\n          barIndex = _this$state.barIndex,\n          left = _this$state.left,\n          right = _this$state.right,\n          refAreaLeft = _this$state.refAreaLeft,\n          refAreaRight = _this$state.refAreaRight,\n          top = _this$state.top,\n          bottom = _this$state.bottom,\n          top2 = _this$state.top2,\n          bottom2 = _this$state.bottom2,\n          incomedata = _this$state.incomedata;\n    return React.createElement(\"div\", {\n      ref: this.saveRef,\n      className: \"highlight-bar-charts\",\n      style: {\n        userSelect: 'none'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(RangePicker, {\n      defaultValue: [moment(moment().add('day', -7).format('YYYY-MM-DD'), dateFormat), moment(moment().format('YYYY-MM-DD'), dateFormat)],\n      format: dateFormat,\n      onChange: this.DatePickerFunction.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }), React.createElement(Button, {\n      icon: \"zoom-in\",\n      href: \"javascript: void(0);\",\n      className: \"btn update\",\n      onClick: this.zoomOut.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), React.createElement(LineChart, {\n      width: 1500,\n      height: 700,\n      data: incomedata //onMouseDown={e => this.setState({ refAreaLeft: e.activeLabel })}\n      //onMouseMove={e => this.state.refAreaLeft && this.setState({ refAreaRight: e.activeLabel })}\n      //onMouseUp={this.zoom.bind(this)}\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(CartesianGrid, {\n      strokeDasharray: \"3 3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), React.createElement(XAxis //allowDataOverflow\n    , {\n      dataKey: \"\\u65E5\\u671F\" //domain={[left, right]}\n      ,\n      type: \"category\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), React.createElement(YAxis\n    /*allowDataOverflow\n    domain={[bottom, top]}\n    type=\"number\"\n    yAxisId=\"1\"*/\n    , {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }), React.createElement(Tooltip, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), React.createElement(Line, {\n      yAxisId: \"1\",\n      type: \"natural\",\n      dataKey: \"\\u71DF\\u696D\\u984D\",\n      stroke: \"#FF0000\",\n      animationDuration: 300,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), React.createElement(Line, {\n      yAxisId: \"1\",\n      type: \"natural\",\n      dataKey: \"\\u9032\\u8CA8\\u652F\\u51FA\",\n      stroke: \"#00FF00\",\n      animationDuration: 300,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), React.createElement(Line, {\n      yAxisId: \"1\",\n      type: \"natural\",\n      dataKey: \"\\u96DC\\u652F\",\n      stroke: \"#0000FF\",\n      animationDuration: 300,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    })));\n  }\n\n  componentWillMount(e) {\n    window.addEventListener(\"resize\", this.updateDimensions);\n    console.log('componentWillMount');\n    axios.get(baseURL + '/ShopData/getRangeData', {\n      params: {\n        shopname: window.localStorage.getItem('shopname'),\n        branch: window.localStorage.getItem('branch'),\n        start: moment().add('day', -7).format('YYYY-MM-DD'),\n        end: moment().format('YYYY-MM-DD')\n      }\n    }).then(response => {\n      this.setState({\n        incomedata: response.data\n      });\n      console.log(this.state.incomedata);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  componentWillUnmount() {\n    console.log('componentWillUnmount');\n    window.removeEventListener(\"resize\", this.updateDimensions);\n  }\n\n  componentWillUpdate() {\n    console.log('componentWillUpdate');\n  }\n\n  DatePickerFunction(dates, dateStrings) {\n    axios.get(baseURL + '/ShopData/getRangeData', {\n      params: {\n        shopname: window.localStorage.getItem('shopname'),\n        branch: window.localStorage.getItem('branch'),\n        start: dateStrings[0],\n        end: dateStrings[1]\n      }\n    }).then(response => {\n      this.setState({\n        incomedata: response.data\n      });\n      console.log(this.state.data);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n}\n\nAbc.jsfiddleUrl = 'https://jsfiddle.net/alidingling/nhpemhgs/';\nexport default Abc;","map":{"version":3,"sources":["/Users/mac/Documents/React/workspace/src/FrontEnd/Components/abcd.js"],"names":["React","PureComponent","Label","LineChart","Line","CartesianGrid","XAxis","YAxis","Tooltip","ReferenceArea","DatePicker","Button","moment","axios","baseURL","dateFormat","RangePicker","initialState","left","right","refAreaLeft","refAreaRight","top","bottom","top2","bottom2","animation","incomedata","expensedata","chartWidth","chartHeight","Abc","constructor","props","updateDimensions","e","console","log","refDom","clientWidth","clientHeight","setState","state","saveRef","ref","bind","render","data","barIndex","userSelect","add","format","DatePickerFunction","zoomOut","componentWillMount","window","addEventListener","get","params","shopname","localStorage","getItem","branch","start","end","then","response","catch","error","componentWillUnmount","removeEventListener","componentWillUpdate","dates","dateStrings","jsfiddleUrl"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\nimport {\n  Label, LineChart, Line, CartesianGrid, XAxis, YAxis, Tooltip, ReferenceArea,\n} from 'recharts';\nimport { DatePicker, Button } from 'antd';\nimport moment from 'moment';\nimport axios from 'axios'\nimport baseURL from '../Components/AxiosAPI'\nimport './abcd.css'\nconst dateFormat = 'YYYY-MM-DD';\nconst { RangePicker } = DatePicker;\n\n\nconst initialState = {\n  left: 'dataMin',\n  right: 'dataMax',\n  refAreaLeft: '',\n  refAreaRight: '',\n  top: 'dataMax+1',\n  bottom: 'dataMin-1',\n  top2: 'dataMax+20',\n  bottom2: 'dataMin-20',\n  animation: true,\n  incomedata:'',\n  expensedata:'',\n  chartWidth:1500,\n  chartHeight:700\n};\n\nclass Abc extends PureComponent {\n  static jsfiddleUrl = 'https://jsfiddle.net/alidingling/nhpemhgs/';\n\n  constructor(props) {\n    super(props);\n    this.state = initialState;\n\n    this.saveRef = ref => {this.refDom = ref};\n    this.updateDimensions = this.updateDimensions.bind(this)\n\n  }\n\n\n  render() {\n    const {\n      data, barIndex, left, right, refAreaLeft, refAreaRight, top, bottom, top2, bottom2,incomedata\n    } = this.state;\n\n    return (\n      <div ref={this.saveRef} className=\"highlight-bar-charts\" style={{ userSelect: 'none' }}>\n        <RangePicker\n          defaultValue={[moment(moment().add('day',-7).format('YYYY-MM-DD'), dateFormat), moment(moment().format('YYYY-MM-DD'), dateFormat)]}\n          format={dateFormat}\n          onChange={this.DatePickerFunction.bind(this)}\n        />\n        <Button \n          icon=\"zoom-in\"\n          href=\"javascript: void(0);\"\n          className=\"btn update\"\n          onClick={this.zoomOut.bind(this)}\n        ></Button>\n        \n\n        <LineChart\n          width={1500}\n          height={700}\n          data={incomedata}\n          //onMouseDown={e => this.setState({ refAreaLeft: e.activeLabel })}\n          //onMouseMove={e => this.state.refAreaLeft && this.setState({ refAreaRight: e.activeLabel })}\n          //onMouseUp={this.zoom.bind(this)}\n        >\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <XAxis\n            //allowDataOverflow\n            dataKey=\"日期\"\n            //domain={[left, right]}\n            type=\"category\"\n          />\n          <YAxis\n            /*allowDataOverflow\n            domain={[bottom, top]}\n            type=\"number\"\n            yAxisId=\"1\"*/\n          />\n          \n          <Tooltip />\n          <Line yAxisId=\"1\" type=\"natural\" dataKey=\"營業額\" stroke=\"#FF0000\" animationDuration={300} />\n          <Line yAxisId=\"1\" type=\"natural\" dataKey=\"進貨支出\" stroke=\"#00FF00\" animationDuration={300} />\n          <Line yAxisId=\"1\" type=\"natural\" dataKey=\"雜支\" stroke=\"#0000FF\" animationDuration={300} />\n\n          {\n            //(refAreaLeft && refAreaRight) ? (\n            //  <ReferenceArea yAxisId=\"1\" x1={refAreaLeft} x2={refAreaRight} strokeOpacity={0.3} />) : null\n            }\n        </LineChart>\n\n      </div>\n    );\n  }\n\n  componentWillMount(e) {\n    window.addEventListener(\"resize\", this.updateDimensions);\n\n    console.log('componentWillMount');\n    axios.get(baseURL+'/ShopData/getRangeData',\n      {\n        params: {\n          shopname : window.localStorage.getItem('shopname'),\n          branch : window.localStorage.getItem('branch'),\n          start:moment().add('day',-7).format('YYYY-MM-DD'),\n          end:moment().format('YYYY-MM-DD')\n        }\n      }\n    )\n    .then( (response) =>{\n      this.setState({incomedata:response.data})\n      \n      console.log(this.state.incomedata)\n    })\n    .catch(function (error) {\n      console.log(error);\n    }); \n  }\n  componentWillUnmount() {\n    console.log('componentWillUnmount');\n    window.removeEventListener(\"resize\", this.updateDimensions);\n  }\n  componentWillUpdate(){\n    console.log('componentWillUpdate');\n  }\n  DatePickerFunction(dates, dateStrings) {\n    axios.get(baseURL+'/ShopData/getRangeData',\n      {\n        params: {\n          shopname : window.localStorage.getItem('shopname'),\n          branch : window.localStorage.getItem('branch'),\n          start:dateStrings[0],\n          end:dateStrings[1]\n        }\n      }\n    )\n    .then( (response) =>{\n      this.setState({incomedata:response.data})\n      console.log(this.state.data)\n    })\n    .catch(function (error) {\n      console.log(error);\n    }); \n    \n  }\n  updateDimensions = (e) => { \n    console.log(\"AreaChart updateDimensions\");\n    const {clientWidth, clientHeight} = this.refDom;\n    console.log('====================================');\n    console.log(clientWidth, clientHeight, this.refDom);\n    console.log('====================================');\n    this.setState({\n    chartWidth:clientWidth\n  });\n}\n}\n\nexport default Abc"]},"metadata":{},"sourceType":"module"}