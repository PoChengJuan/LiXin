{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/React/workspace/src/FrontEnd/Components/Achieving.js\";\nimport React from 'react';\nimport './Achieving.css';\nimport { DatePicker } from 'antd';\nimport axios from 'axios';\nimport baseURL from './AxiosAPI';\nimport moment from 'moment';\nimport { BarChart, Bar, Cell, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ReferenceLine } from 'recharts';\nconst MonthPicker = DatePicker.MonthPicker;\nconst monthFormat = 'YYYY-MM';\nconst data = [{\n  name: 'Page A',\n  uv: 4000,\n  pv: 1200,\n  amt: 2400\n}, {\n  name: 'Page B',\n  uv: 3000,\n  pv: 1398,\n  amt: 2210\n}];\n\nclass Achieving extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.updateDimensions = e => {\n      console.log(\"AreaChart updateDimensions\");\n      const _this$refDom = this.refDom,\n            clientWidth = _this$refDom.clientWidth,\n            clientHeight = _this$refDom.clientHeight;\n      console.log('====================================');\n      console.log(clientWidth, clientHeight, this.refDom);\n      console.log('====================================');\n      this.setState({\n        chartWidth: clientWidth\n      });\n    };\n\n    this.state = {\n      data: data,\n      month: moment().format('YYY-MM'),\n      chartWidth: this.props.Width,\n      chartHeight: 500\n    };\n\n    this.saveRef = ref => {\n      this.refDom = ref;\n    };\n\n    this.updateDimensions = this.updateDimensions.bind(this);\n  }\n\n  render() {\n    const _this$state = this.state,\n          chartWidth = _this$state.chartWidth,\n          data = _this$state.data;\n    return React.createElement(\"div\", {\n      ref: this.saveRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(MonthPicker, {\n      defaultValue: moment(moment().format('YYYY-MM'), monthFormat),\n      format: monthFormat,\n      onChange: this.MonthPickerFunction.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \" Achieving\"), React.createElement(BarChart, {\n      width: chartWidth,\n      height: 700,\n      data: data,\n      margin: {\n        top: 20,\n        right: 30,\n        left: 20,\n        bottom: 5\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(CartesianGrid, {\n      strokeDasharray: \"3 3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }), React.createElement(XAxis, {\n      dataKey: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }), React.createElement(YAxis, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), React.createElement(Tooltip, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }), React.createElement(Legend, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }), React.createElement(Bar, {\n      dataKey: \"\\u7E3D\\u92B7\\u552E\",\n      stackId: \"a\",\n      fill: \"#8884d8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), React.createElement(Bar, {\n      dataKey: \"\\u5831\\u5EE2\",\n      stackId: \"a\",\n      fill: \"#ff0000\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), React.createElement(Bar, {\n      dataKey: \"\\u7E3D\\u9032\\u8CA8\",\n      fill: \"#82ca9d\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    })));\n  }\n  /***********************componentWillMount********************************************/\n\n\n  componentWillMount() {\n    window.addEventListener(\"resize\", this.updateDimensions);\n    var month = window.localStorage.getItem('AchievingPageDate_Month');\n    var lastmonth;\n\n    if (month === null) {\n      month = moment().format('YYYY-MM');\n      lastmonth = moment('2019-01').add('month', -1).format('YYYY-MM');\n    }\n\n    axios.get(baseURL + '/ShopData/getAchieving', {\n      params: {\n        shopname: window.localStorage.getItem('shopname'),\n        branch: window.localStorage.getItem('branch'),\n        month: month,\n        lastmonth: lastmonth\n      }\n    }).then(response => {\n      this.setState({\n        data: response.data\n      });\n      console.log(this.state.data);\n    }).catch(function (error) {\n      console.log(error);\n    });\n    this.setState({\n      month: month\n    });\n  }\n  /***********************componentWillUnmount********************************************/\n\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.updateDimensions);\n  }\n\n  componentWillUpdate() {}\n  /***********************updateDimensions********************************************/\n\n\n  /***********************MonthPickerFunction********************************************/\n  MonthPickerFunction(dates, dateStrings) {\n    var lastmonth;\n    window.localStorage.setItem(\"AchievingPageDate_Month\", dateStrings);\n    axios.get(baseURL + '/ShopData/getAchieving', {\n      params: {\n        shopname: window.localStorage.getItem('shopname'),\n        branch: window.localStorage.getItem('branch'),\n        month: dateStrings,\n        lastmonth: lastmonth\n      }\n    }).then(response => {\n      this.setState({\n        data: response.data\n      });\n      console.log(this.state.data);\n    }).catch(function (error) {\n      console.log(error);\n    });\n    this.setState({\n      month: dateStrings\n    });\n  }\n\n}\n\nexport default Achieving;","map":{"version":3,"sources":["/Users/mac/Documents/React/workspace/src/FrontEnd/Components/Achieving.js"],"names":["React","DatePicker","axios","baseURL","moment","BarChart","Bar","Cell","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ReferenceLine","MonthPicker","monthFormat","data","name","uv","pv","amt","Achieving","Component","constructor","props","updateDimensions","e","console","log","refDom","clientWidth","clientHeight","setState","chartWidth","state","month","format","Width","chartHeight","saveRef","ref","bind","render","MonthPickerFunction","top","right","left","bottom","componentWillMount","window","addEventListener","localStorage","getItem","lastmonth","add","get","params","shopname","branch","then","response","catch","error","componentWillUnmount","removeEventListener","componentWillUpdate","dates","dateStrings","setItem"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './Achieving.css'\nimport { DatePicker } from 'antd';\nimport axios from 'axios'\nimport baseURL from './AxiosAPI'\nimport moment from 'moment';\nimport {\n    BarChart, Bar, Cell, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ReferenceLine,\n  } from 'recharts';\nconst {MonthPicker} = DatePicker;\nconst monthFormat = 'YYYY-MM';\n\n  const data = [\n    {\n      name: 'Page A', uv: 4000, pv: 1200, amt: 2400,\n    },\n    {\n      name: 'Page B', uv: 3000, pv: 1398, amt: 2210,\n    }\n  ];\n\nclass Achieving extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      data:data,\n      month:moment().format('YYY-MM'),\n      chartWidth:this.props.Width,\n      chartHeight:500,\n      \n    }      \n    this.saveRef = ref => {this.refDom = ref};\n    this.updateDimensions = this.updateDimensions.bind(this)\n  }\n  render(){\n    const{chartWidth,data}=this.state\n    return(\n      <div ref={this.saveRef}>\n        <MonthPicker \n          defaultValue={moment(moment().format('YYYY-MM'), monthFormat)} \n          format={monthFormat} \n          onChange={this.MonthPickerFunction.bind(this)}\n          />\n        <p> Achieving</p>\n        <BarChart\n          width={chartWidth}\n          height={700}\n          data={data}\n          margin={{\n            top: 20, right: 30, left: 20, bottom: 5,\n          }}\n          >\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <XAxis dataKey=\"title\" />\n          <YAxis />\n          <Tooltip />\n          <Legend />\n          \n          <Bar dataKey=\"總銷售\" stackId=\"a\" fill=\"#8884d8\" />\n          <Bar dataKey=\"報廢\" stackId=\"a\" fill=\"#ff0000\" />\n          <Bar dataKey=\"總進貨\" fill=\"#82ca9d\" />\n        </BarChart>\n      </div>\n    )\n  }\n  /***********************componentWillMount********************************************/\n  componentWillMount(){\n    window.addEventListener(\"resize\", this.updateDimensions);\n    var month = window.localStorage.getItem('AchievingPageDate_Month');\n    var lastmonth;\n    if(month === null){\n      month = moment().format('YYYY-MM');\n      lastmonth = moment('2019-01').add('month',-1).format('YYYY-MM');\n    }\n    axios.get(baseURL+'/ShopData/getAchieving',\n    {\n      params: {\n        shopname : window.localStorage.getItem('shopname'),\n        branch :  window.localStorage.getItem('branch'),\n        month: month,\n        lastmonth:lastmonth\n      }\n    })\n    .then( (response) =>{\n      this.setState({data:response.data})  \n      console.log(this.state.data)\n    })\n    .catch(function (error) {\n      console.log(error);\n    }); \n    this.setState({\n      month:month})\n  }\n  /***********************componentWillUnmount********************************************/\n  componentWillUnmount(){\n    window.removeEventListener(\"resize\", this.updateDimensions);\n  }\n  componentWillUpdate(){\n\n  }\n  /***********************updateDimensions********************************************/\n  updateDimensions = (e) => { \n    console.log(\"AreaChart updateDimensions\");\n    const {clientWidth, clientHeight} = this.refDom;\n    console.log('====================================');\n    console.log(clientWidth, clientHeight, this.refDom);\n    console.log('====================================');\n    this.setState({\n      chartWidth:clientWidth\n    });\n  }\n  /***********************MonthPickerFunction********************************************/\n  MonthPickerFunction(dates, dateStrings) {\n    var lastmonth;\n    window.localStorage.setItem(\"AchievingPageDate_Month\",dateStrings)\n    axios.get(baseURL+'/ShopData/getAchieving',\n    {\n      params: {\n        shopname : window.localStorage.getItem('shopname'),\n        branch :  window.localStorage.getItem('branch'),\n        month: dateStrings,\n        lastmonth:lastmonth\n      }\n    })\n    .then( (response) =>{\n      this.setState({data:response.data})  \n      console.log(this.state.data)\n    })\n    .catch(function (error) {\n      console.log(error);\n    }); \n    this.setState({\n      month:dateStrings})\n  }\n}\n\nexport default Achieving"]},"metadata":{},"sourceType":"module"}