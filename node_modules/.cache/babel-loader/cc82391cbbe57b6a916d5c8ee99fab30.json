{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/React/workspace/src/FrontEnd/Components/BarChart.js\";\nimport React from 'react';\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, LabelList } from 'recharts';\nimport '../Components/BarChart.css';\nconst data = [{\n  name: 'Page A',\n  uv: 4000,\n  pv: 2400,\n  amt: 2400\n}, {\n  name: 'Page B',\n  uv: 3000,\n  pv: 1398,\n  amt: 2210\n}, {\n  name: 'Page C',\n  uv: 2000,\n  pv: 8,\n  amt: 2290\n}, {\n  name: 'Page D',\n  uv: 2780,\n  pv: 3908,\n  amt: 2000\n}, {\n  name: 'Page E',\n  uv: 18,\n  pv: 4800,\n  amt: 2181\n}, {\n  name: 'Page F',\n  uv: 2390,\n  pv: 3800,\n  amt: 2500\n}, {\n  name: 'Page G',\n  uv: 3490,\n  pv: 4300,\n  amt: 2100\n}];\n\nconst renderCustomizedLabel = props => {\n  const x = props.x,\n        y = props.y,\n        width = props.width,\n        height = props.height,\n        value = props.value;\n  const radius = 10;\n  return React.createElement(\"g\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"circle\", {\n    cx: x + width / 2,\n    cy: y - radius,\n    r: radius,\n    fill: \"#8884d8\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }), React.createElement(\"text\", {\n    x: x + width / 2,\n    y: y - radius,\n    fill: \"#fff\",\n    textAnchor: \"middle\",\n    dominantBaseline: \"middle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, value.split(' ')[1]));\n};\n\nclass BarChartItem extends React.Component {\n  constructor(props) {\n    super(props);\n    console.log('constructor');\n    this.state = {\n      date: new Date(),\n      chartWidth: 1500,\n      chartHeight: 700\n    };\n\n    this.saveRef = ref => {\n      this.refDom = ref;\n    };\n\n    this.updateDimensions = this.updateDimensions.bind(this);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      ref: this.saveRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(BarChart, {\n      width: this.state.chartWidth,\n      height: this.props.height,\n      data: data,\n      margin: {\n        top: 5,\n        right: 30,\n        left: 20,\n        bottom: 5\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(CartesianGrid, {\n      strokeDasharray: \"3 3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), React.createElement(XAxis, {\n      dataKey: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), React.createElement(YAxis, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }), React.createElement(Tooltip, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }), React.createElement(Legend, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }), React.createElement(Bar, {\n      dataKey: \"pv\",\n      fill: \"#8884d8\",\n      minPointSize: 5,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(LabelList, {\n      dataKey: \"name\",\n      content: renderCustomizedLabel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    })), React.createElement(Bar, {\n      dataKey: \"uv\",\n      fill: \"#82ca9d\",\n      minPointSize: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    })));\n  }\n\n  componentWillMount() {\n    console.log('componentWillMount');\n  }\n\n  updateDimensions() {\n    const _this$refDom = this.refDom,\n          clientWidth = _this$refDom.clientWidth,\n          clientHeight = _this$refDom.clientHeight;\n    console.log(\"updateDimensions\");\n    this.setState({\n      chartWidth: clientWidth\n    });\n  }\n\n  componentDidMount() {\n    window.addEventListener(\"resize\", this.updateDimensions);\n  }\n\n  componentWillReceiveProps() {\n    console.log('componentWillReceiveProps');\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    console.log('shouldComponentUpdate');\n    console.log('nextProps:' + nextProps.name);\n    console.log('nextState:' + nextState.date);\n    return true;\n  }\n\n  componentWillUpdate() {\n    console.log('componentWillUpdate');\n  }\n\n  componentDidUpdate() {\n    console.log('componentDidUpdate');\n  }\n\n  componentWillUnmount() {\n    console.log('componentWillUnmount');\n    window.removeEventListener(\"resize\", this.updateDimensions);\n  }\n\n}\n\nexport default BarChartItem;","map":{"version":3,"sources":["/Users/mac/Documents/React/workspace/src/FrontEnd/Components/BarChart.js"],"names":["React","BarChart","Bar","XAxis","YAxis","CartesianGrid","Tooltip","Legend","LabelList","data","name","uv","pv","amt","renderCustomizedLabel","props","x","y","width","height","value","radius","split","BarChartItem","Component","constructor","console","log","state","date","Date","chartWidth","chartHeight","saveRef","ref","refDom","updateDimensions","bind","render","top","right","left","bottom","componentWillMount","clientWidth","clientHeight","setState","componentDidMount","window","addEventListener","componentWillReceiveProps","shouldComponentUpdate","nextProps","nextState","componentWillUpdate","componentDidUpdate","componentWillUnmount","removeEventListener"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n  BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, LabelList,\n} from 'recharts';\nimport '../Components/BarChart.css'\n\nconst data = [\n  {\n    name: 'Page A', uv: 4000, pv: 2400, amt: 2400,\n  },\n  {\n    name: 'Page B', uv: 3000, pv: 1398, amt: 2210,\n  },\n  {\n    name: 'Page C', uv: 2000, pv: 8, amt: 2290,\n  },\n  {\n    name: 'Page D', uv: 2780, pv: 3908, amt: 2000,\n  },\n  {\n    name: 'Page E', uv: 18, pv: 4800, amt: 2181,\n  },\n  {\n    name: 'Page F', uv: 2390, pv: 3800, amt: 2500,\n  },\n  {\n    name: 'Page G', uv: 3490, pv: 4300, amt: 2100,\n  },\n];\n\nconst renderCustomizedLabel = (props) => {\n  const {\n    x, y, width, height, value,\n  } = props;\n  const radius = 10;\n\n  return (\n    <g>\n      <circle cx={x + width / 2} cy={y - radius} r={radius} fill=\"#8884d8\" />\n      <text x={x + width / 2} y={y - radius} fill=\"#fff\" textAnchor=\"middle\" dominantBaseline=\"middle\">\n        {value.split(' ')[1]}\n      </text>\n    </g>\n  );\n};\n\n\nclass BarChartItem extends React.Component {\n  constructor(props) {\n    super(props);\n    console.log('constructor');\n    this.state = {\n      date: new Date(),\n      chartWidth:1500,\n      chartHeight:700\n    };\n    this.saveRef = ref => {this.refDom = ref};\n    this.updateDimensions = this.updateDimensions.bind(this)\n\n  }\n  render() {\n    return (\n      <div ref={this.saveRef}>\n            <BarChart\n                width={this.state.chartWidth}\n                height={this.props.height}\n                data={data}\n                margin={{\n                top: 5, right: 30, left: 20, bottom: 5,\n                }}\n            >\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis dataKey=\"name\" />\n                <YAxis />\n                <Tooltip />\n                <Legend />\n                <Bar dataKey=\"pv\" fill=\"#8884d8\" minPointSize={5}>\n                <LabelList dataKey=\"name\" content={renderCustomizedLabel} />\n                \n                </Bar>\n                <Bar dataKey=\"uv\" fill=\"#82ca9d\" minPointSize={10} />\n            </BarChart>\n            </div>\n  );\n  }\n  \n\n  componentWillMount() {\n    console.log('componentWillMount');\n  }\n  updateDimensions(){\n    const {clientWidth, clientHeight} = this.refDom;\n    console.log(\"updateDimensions\");\n    this.setState({\n      chartWidth:clientWidth\n    });\n  }\n  componentDidMount() {\n    window.addEventListener(\"resize\", this.updateDimensions);\n  }\n\n  componentWillReceiveProps() {\n    console.log('componentWillReceiveProps');\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    console.log('shouldComponentUpdate');\n    console.log('nextProps:'+nextProps.name);\n    console.log('nextState:'+nextState.date);\n    return true;\n  }\n\n  componentWillUpdate() {\n    console.log('componentWillUpdate');\n  }\n\n  componentDidUpdate() {\n    console.log('componentDidUpdate');\n  }\n\n  componentWillUnmount() {\n    console.log('componentWillUnmount');\n    window.removeEventListener(\"resize\", this.updateDimensions);\n  }\n\n}\n\nexport default BarChartItem"]},"metadata":{},"sourceType":"module"}