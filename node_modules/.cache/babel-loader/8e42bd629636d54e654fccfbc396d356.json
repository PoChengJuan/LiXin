{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/React/workspace/src/FrontEnd/Components/Achieving.js\";\nimport React from 'react';\nimport './Achieving.css';\nimport { DatePicker, Table } from 'antd';\nimport axios from 'axios';\nimport baseURL from './AxiosAPI';\nimport moment from 'moment';\nimport { BarChart, Bar, Cell, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ReferenceLine } from 'recharts';\nconst MonthPicker = DatePicker.MonthPicker;\nconst monthFormat = 'YYYY-MM';\nconst data = [{\n  name: 'Page A',\n  uv: 4000,\n  pv: 1200,\n  amt: 2400\n}, {\n  name: 'Page B',\n  uv: 3000,\n  pv: 1398,\n  amt: 2210\n}];\n\nclass Achieving extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.updateDimensions = e => {\n      console.log(\"AreaChart updateDimensions\");\n      const _this$refDom = this.refDom,\n            clientWidth = _this$refDom.clientWidth,\n            clientHeight = _this$refDom.clientHeight;\n      console.log('====================================');\n      console.log(clientWidth, clientHeight, this.refDom);\n      console.log('====================================');\n      this.setState({\n        chartWidth: clientWidth\n      });\n    };\n\n    this.state = {\n      data: data,\n      month: moment().format('YYY-MM'),\n      chartWidth: this.props.Width,\n      chartHeight: 500\n    };\n\n    this.saveRef = ref => {\n      this.refDom = ref;\n    };\n\n    this.updateDimensions = this.updateDimensions.bind(this);\n  }\n\n  render() {\n    let sortedInfo = this.state.sortedInfo;\n    sortedInfo = sortedInfo || {};\n    const columns = [{\n      title: '品項',\n      dataIndex: 'title',\n      key: 'title',\n      width: '10%',\n      sorter: (a, b) => a.title.Date - b.title.Date,\n      sortOrder: sortedInfo.columnKey === '日期' && sortedInfo.order\n    }, {\n      title: '營業額',\n      dataIndex: '營業額',\n      key: '營業額',\n      width: '30%',\n      defaultSortOrder: 'descend',\n      sorter: (a, b) => a.營業額 - b.營業額,\n      sortOrder: sortedInfo.columnKey === '營業額' && sortedInfo.order\n    }, {\n      title: '進貨支出',\n      dataIndex: '進貨支出',\n      key: '進貨支出',\n      width: '30%',\n      sorter: (a, b) => a.進貨支出 - b.進貨支出,\n      sortOrder: sortedInfo.columnKey === '進貨支出' && sortedInfo.order\n    }, {\n      title: '雜支',\n      dataIndex: '雜支',\n      key: '雜支',\n      width: '30%',\n      sorter: (a, b) => a.雜支 - b.雜支,\n      sortOrder: sortedInfo.columnKey === '雜支' && sortedInfo.order\n    }];\n    const _this$state = this.state,\n          chartWidth = _this$state.chartWidth,\n          data = _this$state.data;\n    return React.createElement(\"div\", {\n      ref: this.saveRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(MonthPicker, {\n      defaultValue: moment(this.state.month, monthFormat),\n      format: monthFormat,\n      onChange: this.MonthPickerFunction.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \" Achieving\"), React.createElement(BarChart, {\n      width: chartWidth,\n      height: 700,\n      data: data,\n      margin: {\n        top: 20,\n        right: 30,\n        left: 20,\n        bottom: 5\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(CartesianGrid, {\n      strokeDasharray: \"3 3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }), React.createElement(XAxis, {\n      dataKey: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }), React.createElement(YAxis, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }), React.createElement(Tooltip, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }), React.createElement(Legend, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }), React.createElement(Bar, {\n      dataKey: \"\\u7E3D\\u92B7\\u552E\",\n      stackId: \"a\",\n      fill: \"#8884d8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }), React.createElement(Bar, {\n      dataKey: \"\\u5831\\u5EE2\",\n      stackId: \"a\",\n      fill: \"#ff0000\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }), React.createElement(Bar, {\n      dataKey: \"\\u7E3D\\u9032\\u8CA8\",\n      fill: \"#82ca9d\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    })), React.createElement(Table, {\n      columns: columns,\n      dataSource: this.state.data,\n      size: \"small\",\n      pagination: false,\n      scroll: {\n        y: 240\n      },\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }));\n  }\n  /***********************componentWillMount********************************************/\n\n\n  componentWillMount() {\n    window.addEventListener(\"resize\", this.updateDimensions);\n    var month = window.localStorage.getItem('AchievingPageDate_Month');\n    var lastmonth;\n\n    if (month === null) {\n      month = moment().format('YYYY-MM');\n    }\n\n    lastmonth = moment(month).add('month', -1).format('YYYY-MM');\n    axios.get(baseURL + '/ShopData/getAchieving', {\n      params: {\n        shopname: window.localStorage.getItem('shopname'),\n        branch: window.localStorage.getItem('branch'),\n        month: month,\n        lastmonth: lastmonth\n      }\n    }).then(response => {\n      this.setState({\n        data: response.data\n      });\n      console.log(this.state.data);\n    }).catch(function (error) {\n      console.log(error);\n    });\n    this.setState({\n      month: month\n    });\n  }\n  /***********************componentWillUnmount********************************************/\n\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.updateDimensions);\n  }\n\n  componentWillUpdate() {}\n  /***********************updateDimensions********************************************/\n\n\n  /***********************MonthPickerFunction********************************************/\n  MonthPickerFunction(dates, dateStrings) {\n    var lastmonth;\n    window.localStorage.setItem(\"AchievingPageDate_Month\", dateStrings);\n    lastmonth = moment(dateStrings).add('month', -1).format('YYYY-MM');\n    axios.get(baseURL + '/ShopData/getAchieving', {\n      params: {\n        shopname: window.localStorage.getItem('shopname'),\n        branch: window.localStorage.getItem('branch'),\n        month: dateStrings,\n        lastmonth: lastmonth\n      }\n    }).then(response => {\n      this.setState({\n        data: response.data\n      });\n      console.log(this.state.data);\n    }).catch(function (error) {\n      console.log(error);\n    });\n    this.setState({\n      month: dateStrings\n    });\n  }\n\n}\n\nexport default Achieving;","map":{"version":3,"sources":["/Users/mac/Documents/React/workspace/src/FrontEnd/Components/Achieving.js"],"names":["React","DatePicker","Table","axios","baseURL","moment","BarChart","Bar","Cell","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ReferenceLine","MonthPicker","monthFormat","data","name","uv","pv","amt","Achieving","Component","constructor","props","updateDimensions","e","console","log","refDom","clientWidth","clientHeight","setState","chartWidth","state","month","format","Width","chartHeight","saveRef","ref","bind","render","sortedInfo","columns","title","dataIndex","key","width","sorter","a","b","Date","sortOrder","columnKey","order","defaultSortOrder","營業額","進貨支出","雜支","MonthPickerFunction","top","right","left","bottom","y","handleChange","componentWillMount","window","addEventListener","localStorage","getItem","lastmonth","add","get","params","shopname","branch","then","response","catch","error","componentWillUnmount","removeEventListener","componentWillUpdate","dates","dateStrings","setItem"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './Achieving.css'\nimport { DatePicker, Table } from 'antd';\nimport axios from 'axios'\nimport baseURL from './AxiosAPI'\nimport moment from 'moment';\nimport {\n    BarChart, Bar, Cell, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ReferenceLine,\n  } from 'recharts';\nconst {MonthPicker} = DatePicker;\nconst monthFormat = 'YYYY-MM';\n\n  const data = [\n    {\n      name: 'Page A', uv: 4000, pv: 1200, amt: 2400,\n    },\n    {\n      name: 'Page B', uv: 3000, pv: 1398, amt: 2210,\n    }\n  ];\n\nclass Achieving extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      data:data,\n      month:moment().format('YYY-MM'),\n      chartWidth:this.props.Width,\n      chartHeight:500,\n      \n    }      \n    this.saveRef = ref => {this.refDom = ref};\n    this.updateDimensions = this.updateDimensions.bind(this)\n  }\n  render(){\n    let { sortedInfo } = this.state;\n        sortedInfo = sortedInfo || {};\n    const columns = [\n      {\n        title: '品項',\n        dataIndex: 'title',\n        key: 'title',\n        width:'10%',\n        sorter: (a, b) => a.title.Date - b.title.Date,\n        sortOrder: sortedInfo.columnKey === '日期' && sortedInfo.order,\n      },\n      {\n        title: '營業額',\n        dataIndex: '營業額',\n        key: '營業額',\n        width:'30%',\n        defaultSortOrder: 'descend',\n        sorter: (a, b) => a.營業額 - b.營業額,\n        sortOrder: sortedInfo.columnKey === '營業額' && sortedInfo.order,\n      },\n      {\n        title: '進貨支出',\n        dataIndex: '進貨支出',\n        key: '進貨支出',\n        width:'30%',\n        sorter: (a, b) => a.進貨支出 - b.進貨支出,\n        sortOrder: sortedInfo.columnKey === '進貨支出' && sortedInfo.order,\n      },\n      {\n        title: '雜支',\n        dataIndex: '雜支',\n        key: '雜支',\n        width:'30%',\n        sorter: (a, b) => a.雜支 - b.雜支,\n        sortOrder: sortedInfo.columnKey === '雜支' && sortedInfo.order,\n      }\n    ];\n    const{chartWidth,data}=this.state\n    return(\n      <div ref={this.saveRef}>\n        <MonthPicker \n          defaultValue={moment(this.state.month, monthFormat)} \n          format={monthFormat} \n          onChange={this.MonthPickerFunction.bind(this)}\n          />\n        <p> Achieving</p>\n        <BarChart\n          width={chartWidth}\n          height={700}\n          data={data}\n          margin={{\n            top: 20, right: 30, left: 20, bottom: 5,\n          }}\n          >\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <XAxis dataKey=\"title\" />\n          <YAxis />\n          <Tooltip />\n          <Legend />\n          \n          <Bar dataKey=\"總銷售\" stackId=\"a\" fill=\"#8884d8\" />\n          <Bar dataKey=\"報廢\" stackId=\"a\" fill=\"#ff0000\" />\n          <Bar dataKey=\"總進貨\" fill=\"#82ca9d\" />\n        </BarChart>\n        <Table columns={columns} dataSource={this.state.data} size='small' pagination={false} scroll={{ y: 240 }} onChange={this.handleChange} />\n      </div>\n    )\n  }\n  /***********************componentWillMount********************************************/\n  componentWillMount(){\n    window.addEventListener(\"resize\", this.updateDimensions);\n    var month = window.localStorage.getItem('AchievingPageDate_Month');\n    var lastmonth;\n    if(month === null){\n      month = moment().format('YYYY-MM');\n    }\n    lastmonth = moment(month).add('month',-1).format('YYYY-MM');\n    axios.get(baseURL+'/ShopData/getAchieving',\n    {\n      params: {\n        shopname : window.localStorage.getItem('shopname'),\n        branch :  window.localStorage.getItem('branch'),\n        month: month,\n        lastmonth:lastmonth\n      }\n    })\n    .then( (response) =>{\n      this.setState({data:response.data})  \n      console.log(this.state.data)\n    })\n    .catch(function (error) {\n      console.log(error);\n    }); \n    this.setState({\n      month:month})\n  }\n  /***********************componentWillUnmount********************************************/\n  componentWillUnmount(){\n    window.removeEventListener(\"resize\", this.updateDimensions);\n  }\n  componentWillUpdate(){\n\n  }\n  /***********************updateDimensions********************************************/\n  updateDimensions = (e) => { \n    console.log(\"AreaChart updateDimensions\");\n    const {clientWidth, clientHeight} = this.refDom;\n    console.log('====================================');\n    console.log(clientWidth, clientHeight, this.refDom);\n    console.log('====================================');\n    this.setState({\n      chartWidth:clientWidth\n    });\n  }\n  /***********************MonthPickerFunction********************************************/\n  MonthPickerFunction(dates, dateStrings) {\n    var lastmonth;\n    window.localStorage.setItem(\"AchievingPageDate_Month\",dateStrings)\n    lastmonth = moment(dateStrings).add('month',-1).format('YYYY-MM');\n    axios.get(baseURL+'/ShopData/getAchieving',\n    {\n      params: {\n        shopname : window.localStorage.getItem('shopname'),\n        branch :  window.localStorage.getItem('branch'),\n        month: dateStrings,\n        lastmonth:lastmonth\n      }\n    })\n    .then( (response) =>{\n      this.setState({data:response.data})  \n      console.log(this.state.data)\n    })\n    .catch(function (error) {\n      console.log(error);\n    }); \n    this.setState({\n      month:dateStrings})\n  }\n}\n\nexport default Achieving"]},"metadata":{},"sourceType":"module"}