{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/React/workspace/src/FrontEnd/Components/Statistics.js\";\nimport React from 'react';\nimport './Statistics.css';\nimport { Table, Button, DatePicker } from 'antd';\nimport axios from 'axios';\nimport baseURL from './AxiosAPI';\nimport moment from 'moment';\nconst MonthPicker = DatePicker.MonthPicker;\nconst monthFormat = 'YYYY-MM';\nconst TotalOrder_columns = [{\n  title: '品項',\n  dataIndex: 'title',\n  key: 'title',\n  render: text => React.createElement(\"a\", {\n    href: \"javascript:;\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, text)\n}, {\n  title: '數量',\n  dataIndex: 'order',\n  key: 'order',\n  width: '2cm'\n}];\nconst TotalScrap_columns = [{\n  title: '品項',\n  dataIndex: 'title',\n  key: 'title',\n  render: text => React.createElement(\"a\", {\n    href: \"javascript:;\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, text)\n}, {\n  title: '數量',\n  dataIndex: 'scrap',\n  key: 'scrap',\n  width: '2cm'\n}];\nconst TotalExpense_columns = [{\n  title: '項目',\n  dataIndex: 'title',\n  key: 'title',\n  render: text => React.createElement(\"a\", {\n    href: \"javascript:;\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, text)\n}, {\n  title: '金額',\n  dataIndex: 'num',\n  key: 'num',\n  width: '2cm'\n}];\nconst TotalIncome_columns = [{\n  title: '月營收',\n  dataIndex: 'title',\n  key: 'title',\n  render: text => React.createElement(\"a\", {\n    href: \"javascript:;\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, text)\n}, {\n  title: 'income',\n  dataIndex: 'income',\n  key: 'income',\n  width: '2cm'\n}];\n\nclass Statistics extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      total_income: [],\n      total_expense: [],\n      total_order: [],\n      total_scrap: [],\n      month: moment().format('YYYY-MM')\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(MonthPicker, {\n      defaultValue: moment(this.state.month, monthFormat),\n      format: monthFormat,\n      onChange: this.MonthPickerFunction.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      style: {\n        marginBottom: 16\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"\\u7E3D\\u71DF\\u6536\"), React.createElement(Table, {\n      columns: TotalIncome_columns,\n      dataSource: this.state.income,\n      size: \"small\",\n      pagination: false,\n      scroll: {\n        y: 240\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      style: {\n        marginBottom: 16\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"\\u7E3D\\u652F\\u51FA\"), React.createElement(Table, {\n      columns: TotalExpense_columns,\n      dataSource: this.state.income,\n      size: \"small\",\n      pagination: false,\n      scroll: {\n        y: 240\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      style: {\n        marginBottom: 16\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"\\u7E3D\\u9032\\u8CA8\"), React.createElement(Table, {\n      columns: TotalOrder_columns,\n      dataSource: this.state.income,\n      size: \"small\",\n      pagination: false,\n      scroll: {\n        y: 240\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      style: {\n        marginBottom: 16\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"\\u7E3D\\u5831\\u5EE2\"), React.createElement(Table, {\n      columns: TotalScrap_columns,\n      dataSource: this.state.income,\n      size: \"small\",\n      pagination: false,\n      scroll: {\n        y: 240\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }));\n  }\n  /***********************MonthPickerFunction********************************************/\n\n\n  MonthPickerFunction(dates, dateStrings) {\n    var lastmonth;\n    window.localStorage.setItem('StatisticsPageDate_Month', dateStrings);\n    /*window.localStorage.setItem(\"AchievingPageDate_Month\",dateStrings)\n    lastmonth = moment(dateStrings).add('month',-1).format('YYYY-MM');\n    axios.get(baseURL+'/ShopData/getAchieving',\n    {\n      params: {\n        shopname : window.localStorage.getItem('shopname'),\n        branch :  window.localStorage.getItem('branch'),\n        month: dateStrings,\n        lastmonth:lastmonth\n      }\n    })\n    .then( (response) =>{\n      this.setState({data:response.data})  \n      console.log(this.state.data)\n    })\n    .catch(function (error) {\n      console.log(error);\n    }); \n    this.setState({\n      month:dateStrings})*/\n  }\n  /***********************componentWillMount********************************************/\n\n\n  componentWillMount() {\n    window.addEventListener(\"resize\", this.updateDimensions);\n    var month = window.localStorage.getItem('StatisticsPageDate_Month');\n\n    if (month === null) {\n      month = moment().format('YYYY-MM');\n    }\n\n    axios.get(baseURL + '/ShopData/getStatistics', {\n      params: {\n        shopname: window.localStorage.getItem('shopname'),\n        branch: window.localStorage.getItem('branch'),\n        month: month\n      }\n    }).then(response => {\n      this.setState({\n        data: response.data\n      });\n      this.setState({\n        total_income: response.data[0],\n        total_expense: response.data[1],\n        total_order: response.data[2],\n        total_scrap: response.data[3]\n      });\n      console.log(this.state.data);\n    }).catch(function (error) {\n      console.log(error);\n    });\n    this.setState({\n      month: month\n    });\n  }\n\n}\n\nexport default Statistics;","map":{"version":3,"sources":["/Users/mac/Documents/React/workspace/src/FrontEnd/Components/Statistics.js"],"names":["React","Table","Button","DatePicker","axios","baseURL","moment","MonthPicker","monthFormat","TotalOrder_columns","title","dataIndex","key","render","text","width","TotalScrap_columns","TotalExpense_columns","TotalIncome_columns","Statistics","Component","constructor","props","state","total_income","total_expense","total_order","total_scrap","month","format","MonthPickerFunction","bind","marginBottom","income","y","dates","dateStrings","lastmonth","window","localStorage","setItem","componentWillMount","addEventListener","updateDimensions","getItem","get","params","shopname","branch","then","response","setState","data","console","log","catch","error"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './Statistics.css'\nimport { Table, Button, DatePicker } from 'antd';\nimport axios from 'axios'\nimport baseURL from './AxiosAPI'\nimport moment from 'moment';\nconst {MonthPicker} = DatePicker;\nconst monthFormat = 'YYYY-MM';\n\nconst TotalOrder_columns = [\n  {\n    title: '品項',\n    dataIndex: 'title',\n    key: 'title',\n    render: text => <a href=\"javascript:;\">{text}</a>,\n  },\n  {\n    title: '數量',\n    dataIndex: 'order',\n    key: 'order',\n    width:'2cm',\n  }\n];\nconst TotalScrap_columns = [\n  {\n    title: '品項',\n    dataIndex: 'title',\n    key: 'title',\n    render: text => <a href=\"javascript:;\">{text}</a>,\n  },\n  {\n    title: '數量',\n    dataIndex: 'scrap',\n    key: 'scrap',\n    width:'2cm',\n  }\n];\nconst TotalExpense_columns = [\n  {\n    title: '項目',\n    dataIndex: 'title',\n    key: 'title',\n    render: text => <a href=\"javascript:;\">{text}</a>,\n  },\n  {\n    title: '金額',\n    dataIndex: 'num',\n    key: 'num',\n    width:'2cm',\n  }\n];\nconst TotalIncome_columns = [\n  {\n    title: '月營收',\n    dataIndex: 'title',\n    key: 'title',\n    render: text => <a href=\"javascript:;\">{text}</a>,\n  },\n  {\n    title: 'income',\n    dataIndex: 'income',\n    key: 'income',\n    width:'2cm',\n  }\n];\nclass Statistics extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      total_income:[],\n      total_expense:[],\n      total_order:[],\n      total_scrap:[],\n      month:moment().format('YYYY-MM'),\n    }\n  }\n  render(){\n    return(\n      <div>\n        <MonthPicker \n          defaultValue={moment(this.state.month, monthFormat)} \n          format={monthFormat} \n          onChange={this.MonthPickerFunction.bind(this)}\n        />\n        <h3 style={{ marginBottom: 16 }}>總營收</h3>\n          <Table columns={TotalIncome_columns} dataSource={this.state.income} size='small' pagination={false} scroll={{ y: 240 }} />\n          <h3 style={{ marginBottom: 16 }}>總支出</h3>\n          <Table columns={TotalExpense_columns} dataSource={this.state.income} size='small' pagination={false} scroll={{ y: 240 }} />\n          <h3 style={{ marginBottom: 16 }}>總進貨</h3>\n          <Table columns={TotalOrder_columns} dataSource={this.state.income} size='small' pagination={false} scroll={{ y: 240 }} />\n        <h3 style={{ marginBottom: 16 }}>總報廢</h3>\n          <Table columns={TotalScrap_columns} dataSource={this.state.income} size='small' pagination={false} scroll={{ y: 240 }} />\n        \n      </div>\n    )\n  }\n    /***********************MonthPickerFunction********************************************/\n  MonthPickerFunction(dates, dateStrings) {\n    var lastmonth;\n    window.localStorage.setItem('StatisticsPageDate_Month',dateStrings);\n    /*window.localStorage.setItem(\"AchievingPageDate_Month\",dateStrings)\n    lastmonth = moment(dateStrings).add('month',-1).format('YYYY-MM');\n    axios.get(baseURL+'/ShopData/getAchieving',\n    {\n      params: {\n        shopname : window.localStorage.getItem('shopname'),\n        branch :  window.localStorage.getItem('branch'),\n        month: dateStrings,\n        lastmonth:lastmonth\n      }\n    })\n    .then( (response) =>{\n      this.setState({data:response.data})  \n      console.log(this.state.data)\n    })\n    .catch(function (error) {\n      console.log(error);\n    }); \n    this.setState({\n      month:dateStrings})*/\n  }\n  /***********************componentWillMount********************************************/\n  componentWillMount(){\n    window.addEventListener(\"resize\", this.updateDimensions);\n    var month = window.localStorage.getItem('StatisticsPageDate_Month');\n    if(month === null){\n      month = moment().format('YYYY-MM');\n    }\n    axios.get(baseURL+'/ShopData/getStatistics',\n    {\n      params: {\n        shopname : window.localStorage.getItem('shopname'),\n        branch :  window.localStorage.getItem('branch'),\n        month: month\n      }\n    })\n    .then( (response) =>{\n      this.setState({data:response.data}) \n      this.setState({\n        total_income:response.data[0],\n        total_expense:response.data[1],\n        total_order:response.data[2],\n        total_scrap:response.data[3],\n      }) \n      console.log(this.state.data)\n    })\n    .catch(function (error) {\n      console.log(error);\n    }); \n    this.setState({\n      month:month})\n  }\n}\n\nexport default Statistics"]},"metadata":{},"sourceType":"module"}