{"ast":null,"code":"import _slicedToArray from \"/Users/mac/Documents/React/workspace/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/mac/Documents/React/workspace/src/FrontEnd/Components/abcd.js\";\nimport React, { PureComponent } from 'react';\nimport { Label, LineChart, Line, CartesianGrid, XAxis, YAxis, Tooltip, ReferenceArea } from 'recharts';\nconst data = [{\n  name: 1,\n  cost: 4.11,\n  impression: 100\n}, {\n  name: 2,\n  cost: 2.39,\n  impression: 120\n}, {\n  name: 3,\n  cost: 1.37,\n  impression: 150\n}, {\n  name: 4,\n  cost: 1.16,\n  impression: 180\n}, {\n  name: 5,\n  cost: 2.29,\n  impression: 200\n}, {\n  name: 6,\n  cost: 3,\n  impression: 499\n}, {\n  name: 7,\n  cost: 0.53,\n  impression: 50\n}, {\n  name: 8,\n  cost: 2.52,\n  impression: 100\n}, {\n  name: 9,\n  cost: 1.79,\n  impression: 200\n}, {\n  name: 10,\n  cost: 2.94,\n  impression: 222\n}, {\n  name: 11,\n  cost: 4.3,\n  impression: 210\n}, {\n  name: 12,\n  cost: 4.41,\n  impression: 300\n}, {\n  name: 13,\n  cost: 2.1,\n  impression: 50\n}, {\n  name: 14,\n  cost: 8,\n  impression: 190\n}, {\n  name: 15,\n  cost: 0,\n  impression: 300\n}, {\n  name: 16,\n  cost: 9,\n  impression: 400\n}, {\n  name: 17,\n  cost: 3,\n  impression: 200\n}, {\n  name: 18,\n  cost: 2,\n  impression: 50\n}, {\n  name: 19,\n  cost: 3,\n  impression: 100\n}, {\n  name: 20,\n  cost: 7,\n  impression: 100\n}];\n\nconst getAxisYDomain = (from, to, ref, offset) => {\n  const refData = data.slice(from - 1, to);\n  let _ref = [refData[0][ref], refData[0][ref]],\n      bottom = _ref[0],\n      top = _ref[1];\n  refData.forEach(d => {\n    if (d[ref] > top) top = d[ref];\n    if (d[ref] < bottom) bottom = d[ref];\n  });\n  return [(bottom | 0) - offset, (top | 0) + offset];\n};\n\nconst initialState = {\n  data,\n  left: 'dataMin',\n  right: 'dataMax',\n  refAreaLeft: '',\n  refAreaRight: '',\n  top: 'dataMax+1',\n  bottom: 'dataMin-1',\n  top2: 'dataMax+20',\n  bottom2: 'dataMin-20',\n  animation: true\n};\n\nclass Example extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = initialState;\n  }\n\n  zoom() {\n    let _this$state = this.state,\n        refAreaLeft = _this$state.refAreaLeft,\n        refAreaRight = _this$state.refAreaRight,\n        data = _this$state.data;\n\n    if (refAreaLeft === refAreaRight || refAreaRight === '') {\n      this.setState(() => ({\n        refAreaLeft: '',\n        refAreaRight: ''\n      }));\n      return;\n    } // xAxis domain\n\n\n    if (refAreaLeft > refAreaRight) {\n      var _ref2 = [refAreaRight, refAreaLeft];\n      refAreaLeft = _ref2[0];\n      refAreaRight = _ref2[1];\n    } // yAxis domain\n\n\n    const _getAxisYDomain = getAxisYDomain(refAreaLeft, refAreaRight, 'cost', 1),\n          _getAxisYDomain2 = _slicedToArray(_getAxisYDomain, 2),\n          bottom = _getAxisYDomain2[0],\n          top = _getAxisYDomain2[1];\n\n    const _getAxisYDomain3 = getAxisYDomain(refAreaLeft, refAreaRight, 'impression', 50),\n          _getAxisYDomain4 = _slicedToArray(_getAxisYDomain3, 2),\n          bottom2 = _getAxisYDomain4[0],\n          top2 = _getAxisYDomain4[1];\n\n    this.setState(() => ({\n      refAreaLeft: '',\n      refAreaRight: '',\n      data: data.slice(),\n      left: refAreaLeft,\n      right: refAreaRight,\n      bottom,\n      top,\n      bottom2,\n      top2\n    }));\n  }\n\n  zoomOut() {\n    const data = this.state.data;\n    this.setState(() => ({\n      data: data.slice(),\n      refAreaLeft: '',\n      refAreaRight: '',\n      left: 'dataMin',\n      right: 'dataMax',\n      top: 'dataMax+1',\n      bottom: 'dataMin',\n      top2: 'dataMax+50',\n      bottom: 'dataMin+50'\n    }));\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          data = _this$state2.data,\n          barIndex = _this$state2.barIndex,\n          left = _this$state2.left,\n          right = _this$state2.right,\n          refAreaLeft = _this$state2.refAreaLeft,\n          refAreaRight = _this$state2.refAreaRight,\n          top = _this$state2.top,\n          bottom = _this$state2.bottom,\n          top2 = _this$state2.top2,\n          bottom2 = _this$state2.bottom2;\n    return React.createElement(\"div\", {\n      className: \"highlight-bar-charts\",\n      style: {\n        userSelect: 'none'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      href: \"javascript: void(0);\",\n      className: \"btn update\",\n      onClick: this.zoomOut.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"Zoom Out\"), React.createElement(LineChart, {\n      width: 800,\n      height: 400,\n      data: data,\n      onMouseDown: e => this.setState({\n        refAreaLeft: e.activeLabel\n      }),\n      onMouseMove: e => this.state.refAreaLeft && this.setState({\n        refAreaRight: e.activeLabel\n      }),\n      onMouseUp: this.zoom.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(CartesianGrid, {\n      strokeDasharray: \"3 3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }), React.createElement(XAxis, {\n      allowDataOverflow: true,\n      dataKey: \"name\",\n      domain: [left, right],\n      type: \"number\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }), React.createElement(YAxis, {\n      allowDataOverflow: true,\n      domain: [bottom, top],\n      type: \"number\",\n      yAxisId: \"1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }), React.createElement(YAxis, {\n      orientation: \"right\",\n      allowDataOverflow: true,\n      domain: [bottom2, top2],\n      type: \"number\",\n      yAxisId: \"2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }), React.createElement(Tooltip, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }), React.createElement(Line, {\n      yAxisId: \"1\",\n      type: \"natural\",\n      dataKey: \"cost\",\n      stroke: \"#8884d8\",\n      animationDuration: 300,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }), React.createElement(Line, {\n      yAxisId: \"2\",\n      type: \"natural\",\n      dataKey: \"impression\",\n      stroke: \"#82ca9d\",\n      animationDuration: 300,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }), refAreaLeft && refAreaRight ? React.createElement(ReferenceArea, {\n      yAxisId: \"1\",\n      x1: refAreaLeft,\n      x2: refAreaRight,\n      strokeOpacity: 0.3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }) : null));\n  }\n\n}\n\nExample.jsfiddleUrl = 'https://jsfiddle.net/alidingling/nhpemhgs/';\nexport default abc;","map":{"version":3,"sources":["/Users/mac/Documents/React/workspace/src/FrontEnd/Components/abcd.js"],"names":["React","PureComponent","Label","LineChart","Line","CartesianGrid","XAxis","YAxis","Tooltip","ReferenceArea","data","name","cost","impression","getAxisYDomain","from","to","ref","offset","refData","slice","bottom","top","forEach","d","initialState","left","right","refAreaLeft","refAreaRight","top2","bottom2","animation","Example","constructor","props","state","zoom","setState","zoomOut","render","barIndex","userSelect","bind","e","activeLabel","jsfiddleUrl","abc"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\nimport {\n  Label, LineChart, Line, CartesianGrid, XAxis, YAxis, Tooltip, ReferenceArea,\n} from 'recharts';\n\nconst data = [\n  { name: 1, cost: 4.11, impression: 100 },\n  { name: 2, cost: 2.39, impression: 120 },\n  { name: 3, cost: 1.37, impression: 150 },\n  { name: 4, cost: 1.16, impression: 180 },\n  { name: 5, cost: 2.29, impression: 200 },\n  { name: 6, cost: 3, impression: 499 },\n  { name: 7, cost: 0.53, impression: 50 },\n  { name: 8, cost: 2.52, impression: 100 },\n  { name: 9, cost: 1.79, impression: 200 },\n  { name: 10, cost: 2.94, impression: 222 },\n  { name: 11, cost: 4.3, impression: 210 },\n  { name: 12, cost: 4.41, impression: 300 },\n  { name: 13, cost: 2.1, impression: 50 },\n  { name: 14, cost: 8, impression: 190 },\n  { name: 15, cost: 0, impression: 300 },\n  { name: 16, cost: 9, impression: 400 },\n  { name: 17, cost: 3, impression: 200 },\n  { name: 18, cost: 2, impression: 50 },\n  { name: 19, cost: 3, impression: 100 },\n  { name: 20, cost: 7, impression: 100 },\n];\n\nconst getAxisYDomain = (from, to, ref, offset) => {\n  const refData = data.slice(from - 1, to);\n  let [bottom, top] = [refData[0][ref], refData[0][ref]];\n  refData.forEach((d) => {\n    if (d[ref] > top) top = d[ref];\n    if (d[ref] < bottom) bottom = d[ref];\n  });\n\n  return [(bottom | 0) - offset, (top | 0) + offset];\n};\n\nconst initialState = {\n  data,\n  left: 'dataMin',\n  right: 'dataMax',\n  refAreaLeft: '',\n  refAreaRight: '',\n  top: 'dataMax+1',\n  bottom: 'dataMin-1',\n  top2: 'dataMax+20',\n  bottom2: 'dataMin-20',\n  animation: true,\n};\n\nclass Example extends PureComponent {\n  static jsfiddleUrl = 'https://jsfiddle.net/alidingling/nhpemhgs/';\n\n  constructor(props) {\n    super(props);\n    this.state = initialState;\n  }\n\n  zoom() {\n    let { refAreaLeft, refAreaRight, data } = this.state;\n\n    if (refAreaLeft === refAreaRight || refAreaRight === '') {\n      this.setState(() => ({\n        refAreaLeft: '',\n        refAreaRight: '',\n      }));\n      return;\n    }\n\n    // xAxis domain\n    if (refAreaLeft > refAreaRight) [refAreaLeft, refAreaRight] = [refAreaRight, refAreaLeft];\n\n    // yAxis domain\n    const [bottom, top] = getAxisYDomain(refAreaLeft, refAreaRight, 'cost', 1);\n    const [bottom2, top2] = getAxisYDomain(refAreaLeft, refAreaRight, 'impression', 50);\n\n    this.setState(() => ({\n      refAreaLeft: '',\n      refAreaRight: '',\n      data: data.slice(),\n      left: refAreaLeft,\n      right: refAreaRight,\n      bottom,\n      top,\n      bottom2,\n      top2,\n    }));\n  }\n\n  zoomOut() {\n    const { data } = this.state;\n    this.setState(() => ({\n      data: data.slice(),\n      refAreaLeft: '',\n      refAreaRight: '',\n      left: 'dataMin',\n      right: 'dataMax',\n      top: 'dataMax+1',\n      bottom: 'dataMin',\n      top2: 'dataMax+50',\n      bottom: 'dataMin+50',\n    }));\n  }\n\n  render() {\n    const {\n      data, barIndex, left, right, refAreaLeft, refAreaRight, top, bottom, top2, bottom2,\n    } = this.state;\n\n    return (\n      <div className=\"highlight-bar-charts\" style={{ userSelect: 'none' }}>\n        <button\n          href=\"javascript: void(0);\"\n          className=\"btn update\"\n          onClick={this.zoomOut.bind(this)}\n        >\n          Zoom Out\n\n        </button>\n\n        <LineChart\n          width={800}\n          height={400}\n          data={data}\n          onMouseDown={e => this.setState({ refAreaLeft: e.activeLabel })}\n          onMouseMove={e => this.state.refAreaLeft && this.setState({ refAreaRight: e.activeLabel })}\n          onMouseUp={this.zoom.bind(this)}\n        >\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <XAxis\n            allowDataOverflow\n            dataKey=\"name\"\n            domain={[left, right]}\n            type=\"number\"\n          />\n          <YAxis\n            allowDataOverflow\n            domain={[bottom, top]}\n            type=\"number\"\n            yAxisId=\"1\"\n          />\n          <YAxis\n            orientation=\"right\"\n            allowDataOverflow\n            domain={[bottom2, top2]}\n            type=\"number\"\n            yAxisId=\"2\"\n          />\n          <Tooltip />\n          <Line yAxisId=\"1\" type=\"natural\" dataKey=\"cost\" stroke=\"#8884d8\" animationDuration={300} />\n          <Line yAxisId=\"2\" type=\"natural\" dataKey=\"impression\" stroke=\"#82ca9d\" animationDuration={300} />\n\n          {\n            (refAreaLeft && refAreaRight) ? (\n              <ReferenceArea yAxisId=\"1\" x1={refAreaLeft} x2={refAreaRight} strokeOpacity={0.3} />) : null\n            }\n        </LineChart>\n\n      </div>\n    );\n  }\n}\n\nexport default abc"]},"metadata":{},"sourceType":"module"}